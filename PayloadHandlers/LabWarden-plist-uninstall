#!/bin/bash
#
# Short:    Payload Handler Script - uninstall a .LabWarden.plist payload
# Author:   Mark J Swift
# Version:  1.0.98
# Modified: 11-Oct-2016
#
# Called as follows:    
#   LabWarden-plist-uninstall <somefile.LabWarden.plist> [user]
#
# Without a user specified, uninstalls for the workstation.
# With a user, uninstalls for the specified user.

# ---

# Load the library, only if it is not already loaded
if test -z "${LW_sv_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

sv_PayloadFilePath="${1}"

if test -z "${sv_PayloadFilePath}"
then
  LW_nf_QuickExit "Usage ${LW_sv_ThisScriptFileName} somefile.LabWarden.plist"
fi

if ! test -e "${sv_PayloadFilePath}"
then
  LW_nf_QuickExit "File not found - ${sv_PayloadFilePath}"
fi

# ---

if [ "${LW_sv_ThisUserName}" != "root" ]
then
  LW_nf_QuickExit "${sv_PayloadFilePath} can only be uninstalled as root"
fi

# ---

sv_GPOuser="${2}"

if test -n "${sv_GPOuser}"
then
  sv_ConfigDirPath="${LW_sv_SettingsDirPath}/Config/Users/${sv_GPOuser}"
  
else
  sv_ConfigDirPath="${LW_sv_SettingsDirPath}/Config/Computers/${LW_sv_ADComputerName}"
  
fi

# ---

# Uninstall the LabWarden.plist config

mkdir -p "${sv_ConfigDirPath}"

sv_ObjectName=$(LW_sf_GetPlistProperty "${sv_PayloadFilePath}" ":Name")
sv_ObjectType=$(LW_sf_GetPlistProperty "${sv_PayloadFilePath}" ":Type")
sv_ObjectUUID=$(LW_sf_GetPlistProperty "${sv_PayloadFilePath}" ":UUID")

sv_ConfigEntryName=${sv_ObjectUUID}

if test -n "${sv_ConfigEntryName}"
then
  if test -n "${sv_ObjectName}"
  then
    if test -n "${sv_ObjectType}"
    then
  
      LW_nf_logmessage "ATTENTION, uninstalling config for ${sv_ObjectType} '${sv_ObjectName}'"
      
      # Fix for versions prior to 1.0.98 that stored configs under policy name instead of UUID
      /usr/libexec/PlistBuddy >/dev/null 2>/dev/null -c "Print ':${sv_ConfigEntryName}'" "${sv_ConfigDirPath}/LabWarden.plist"
      if [ $? -ne 0 ]
      then
        /usr/libexec/PlistBuddy >/dev/null 2>/dev/null -c "Print ':${sv_ObjectName}:UUID'" "${sv_ConfigDirPath}/LabWarden.plist"
        if [ $? -eq 0 ]
        then
          sv_ConfigEntryName=${sv_ObjectName}
        fi
      fi

      case "${sv_ObjectType}" in
      Printer)
        # Delete the printer
        sv_PrinterName=$(LW_sf_GetPlistProperty "${sv_PayloadFilePath}" ":Name")
        sv_PrinterDesc=$(echo $sv_PrinterName | tr " " "_")
        sv_PrinterName=$(echo $sv_PrinterDesc | tr "-" "_")
        if test -n "${sv_PrinterName}"
        then
          LW_nf_logmessage "ATTENTION, uninstalling printer ${sv_PrinterName}"
          /usr/sbin/lpadmin 2>/dev/null -x "${sv_PrinterName}"
        fi
        ;;

      Policy)
        iv_TriggeredByEventCount="$(LW_if_GetPlistArraySize "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_ConfigEntryName}:TriggeredBy")"
        for (( iv_TriggeredByEventIndex=0; iv_TriggeredByEventIndex<${iv_TriggeredByEventCount}; iv_TriggeredByEventIndex++ ))
        do
          sv_TriggeredByEventName=$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_ConfigEntryName}:TriggeredBy:${iv_TriggeredByEventIndex}")
          if test -n "${sv_TriggeredByEventName}"
          then

            # Check EventName object exists
            /usr/libexec/PlistBuddy >/dev/null 2>&1 -c "Print ':${sv_TriggeredByEventName}'" "${sv_ConfigDirPath}/LabWarden.plist"
            if [ $? -eq 0 ]
            then
              # Check EventName:DoesTrigger array exists
              /usr/libexec/PlistBuddy >/dev/null 2>&1 -c "Print ':${sv_TriggeredByEventName}:DoesTrigger'" "${sv_ConfigDirPath}/LabWarden.plist"
              if [ $? -eq 0 ]
              then
                iv_DoesTriggerCount="$(LW_if_GetPlistArraySize "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_TriggeredByEventName}:DoesTrigger")"
                iv_DoesTriggerIndex=0
                while [ ${iv_DoesTriggerIndex} -lt ${iv_DoesTriggerCount} ]
                do
                  sv_EventDoesTriggerName=$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_TriggeredByEventName}:DoesTrigger:${iv_DoesTriggerIndex}")
                  if [ "${sv_EventDoesTriggerName}" = "${sv_ConfigEntryName}" ]
                  then
                    # Remove object from Events DoesTrigger array
                    /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${sv_TriggeredByEventName}:DoesTrigger:${iv_DoesTriggerIndex}'" "${sv_ConfigDirPath}/LabWarden.plist"
                    iv_DoesTriggerCount=$((${iv_DoesTriggerCount}-1))
                  else
                    iv_DoesTriggerIndex=$((${iv_DoesTriggerIndex}+1))
                  fi
                
                done
                
              fi

            fi

          fi
        done
        ;;
        
      esac

      /usr/libexec/PlistBuddy >/dev/null 2>/dev/null -c "Print ':${sv_ConfigEntryName}:DoesTrigger'" "${sv_ConfigDirPath}/LabWarden.plist"
      if [ $? -ne 0 ]
      then
        # There's no DoesTrigger array, so might as well delete the whole entry
        /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${sv_ConfigEntryName}'" "${sv_ConfigDirPath}/LabWarden.plist"
        
      else
        # Delete everything except the DoesTrigger array
        
        # Delete the Type
        /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${sv_ConfigEntryName}:Type'" "${sv_ConfigDirPath}/LabWarden.plist"

        # Delete the Name
        /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${sv_ConfigEntryName}:Name'" "${sv_ConfigDirPath}/LabWarden.plist"

        # Delete the Config
        /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${sv_ConfigEntryName}:Config'" "${sv_ConfigDirPath}/LabWarden.plist"

        # Delete the Local Prefs
        /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${sv_ConfigEntryName}:LocalPrefs'" "${sv_ConfigDirPath}/LabWarden.plist"

        # Delete the Triggers
        /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${sv_ConfigEntryName}:TriggeredBy'" "${sv_ConfigDirPath}/LabWarden.plist"
        
        # Delete the UUID
        /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${sv_ConfigEntryName}:UUID'" "${sv_ConfigDirPath}/LabWarden.plist"
        
      fi

    fi
  fi
fi

# Remove temporary files
rm -fPR "${LW_sv_ThisScriptTempDirPath}"
