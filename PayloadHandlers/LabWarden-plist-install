#!/bin/bash
#
# Short:    Payload Handler Script - install a .LabWarden.plist payload
# Author:   Mark J Swift
# Version:  1.0.88
# Modified: 27-Jun-2016
#
# Called as follows:    
#   LabWarden-plist-install <somefile.LabWarden.plist> [user]
#
# Without a user specified, installs for the workstation.
# With a user, installs for the specified user.

# ---

# Load the library, only if it is not already loaded
if test -z "${GLB_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Full souce of this script
LCL_MySource="${0}"

# Filename of this script
LCL_MyScript="$(basename ${LCL_MySource})"

# ---

LCL_Payload="${1}"

if test -z "${LCL_Payload}"
then
  f_QuickExit "Usage ${LCL_MyScript} somefile.LabWarden.plist"
fi

if ! test -e "${LCL_Payload}"
then
  f_QuickExit "File not found - ${LCL_Payload}"
fi

# ---

if [ "${GLB_ThisUserName}" != "root" ]
then
  f_QuickExit "${LCL_Payload} can only be installed as root"
fi

# ---

LCL_GPOuser="${2}"

if test -n "${LCL_GPOuser}"
then
  LCL_ConfigDir="${GLB_LabConfigDir}/${LCL_GPOuser}"
  
else
  LCL_ConfigDir="${GLB_LabConfigDir}/${GLB_ADComputerName}"
  
fi

# ---

# Install the LabWarden.plist config 

mkdir -p "${LCL_ConfigDir}"

LCL_ObjectName=$(f_GetPlistProperty "${LCL_Payload}" ":Name")
LCL_ObjectType=$(f_GetPlistProperty "${LCL_Payload}" ":Type")

  if test -n "${LCL_ObjectName}"
  then
    if test -n "${LCL_ObjectType}"
    then
  
      # Create object
      /usr/libexec/PlistBuddy >/dev/null 2>&1 -c "Print ':${LCL_ObjectName}'" "${LCL_ConfigDir}/LabWarden.plist"
      if [ $? -ne 0 ]
      then
        # Add a new object
        /usr/libexec/PlistBuddy 2>/dev/null -c "Add ':${LCL_ObjectName}' dict" "${LCL_ConfigDir}/LabWarden.plist"
        if [ $? -ne 0 ]
        then
          f_QuickExit "Failed to Add dict ':${LCL_ObjectName}' to '${LCL_ConfigDir}/LabWarden.plist'"
        fi
      fi
      
      # Merge config
      /usr/libexec/PlistBuddy 2>/dev/null -c "Merge '${LCL_Payload}' ':${LCL_ObjectName}'" "${LCL_ConfigDir}/LabWarden.plist"
      if [ $? -ne 0 ]
      then
        /usr/libexec/PlistBuddy 2>/dev/null -c "Delete ':${LCL_ObjectName}'" "${LCL_ConfigDir}/LabWarden.plist"
        f_QuickExit "Failed to Merge '${LCL_Payload}' into '${LCL_ConfigDir}/LabWarden.plist'"
      fi
      
      # Create object
      /usr/libexec/PlistBuddy >/dev/null 2>&1 -c "Print ':${LCL_ObjectName}:LocalPrefs'" "${LCL_ConfigDir}/LabWarden.plist"
      if [ $? -ne 0 ]
      then
        # Create prefs
        /usr/libexec/PlistBuddy 2>/dev/null -c "Add ':${LCL_ObjectName}:LocalPrefs' dict" "${LCL_ConfigDir}/LabWarden.plist"
        if [ $? -ne 0 ]
        then
          f_QuickExit "Failed to Add dict ':${LCL_ObjectName}' to '${LCL_ConfigDir}/LabWarden.plist'"
        fi
      fi  

      f_logmessage "ATTENTION, installing config for ${LCL_ObjectType} '${LCL_ObjectName}'"
      case "${LCL_ObjectType}" in
      Printer)
        LCL_PrinterName=$(f_GetPlistProperty "${LCL_Payload}" ":Name")
        if test -n "${LCL_PrinterName}"
        then
          LCL_PrinterURI=$(f_GetPlistProperty "${LCL_Payload}" ":Config:PrinterURI")
          if test -n "${LCL_PrinterURI}"
          then
            LCL_ppdURI=$(f_GetPlistProperty "${LCL_Payload}" ":Config:PPDURI")
            if test -n "${LCL_ppdURI}"
            then
              LCL_PrinterPPD=$(f_ResolveFilename "${LCL_ppdURI}")
              if test -n "${LCL_PrinterPPD}"
              then
                LCL_PrinterOptions=$(f_GetPlistProperty "${LCL_Payload}" ":Config:Options")
                LCL_PrinterLocation=$(f_GetPlistProperty "${LCL_Payload}" ":Config:Location")

                LCL_PrinterDesc=$(echo $LCL_PrinterName | tr " " "_")
                LCL_PrinterName=$(echo $LCL_PrinterDesc | tr "-" "_")

                # If the ppd is gzipped, extract it.
                if [ "$(echo ${LCL_PrinterPPD} | tr "." "\n" | tail -n1)" = "gz" ]
                then
                  gunzip -c "${LCL_PrinterPPD}" > "${GLB_ThisScriptTempDir}/UNGZ.ppd"
                  LCL_PrinterPPD="${GLB_ThisScriptTempDir}/UNGZ.ppd"
                fi
  
                # if we downloaded the PPD from a print server, remove filters
                if test -n "$(echo "${LCL_ppdURI}" | grep ":631/")"
                then
                  if test -n "$(cat "${LCL_PrinterPPD}" | grep "DOCTYPE HTML PUBLIC")"
                  then
                    f_logmessage "ATTENTION, error '"$(cat "${LCL_PrinterPPD}" | grep -i "<TITLE>")"' downloading PPD from ${LCL_ppdURI}"
                    rm -f "${LCL_PrinterPPD}"
                  else
                    cat "${LCL_PrinterPPD}" | grep -v "cupsFilter" | grep -v "cupsPreFilter" | grep -v "APAutoSetupTool" > "${GLB_ThisScriptTempDir}/TEMP.ppd"
                    echo '*cupsFilter: "application/pdf 0 -"' >> "${GLB_ThisScriptTempDir}/TEMP.ppd"
                    echo '*cupsFilter: "image/* 0 -"' >> "${GLB_ThisScriptTempDir}/TEMP.ppd"
                    echo '*cupsFilter: "application/vnd.cups-command 0 -"' >> "${GLB_ThisScriptTempDir}/TEMP.ppd"
                    rm -f "${LCL_PrinterPPD}"
                    LCL_PrinterPPD="${GLB_ThisScriptTempDir}/TEMP.ppd"
                  fi

                else
                  # If there's a setup tool call it. It copies a modified PPD to stdout
                  LCL_setuptool=$(cat ${LCL_PrinterPPD} | grep "APAutoSetupTool" | cut -d'"' -f2)
                  if test -n "${LCL_setuptool}"
                  then
                    "${LCL_setuptool}" "${LCL_PrinterURI}" "${LCL_PrinterPPD}" > "${GLB_ThisScriptTempDir}/TEMP.ppd"
                    rm -f "${LCL_PrinterPPD}"
                    LCL_PrinterPPD="${GLB_ThisScriptTempDir}/TEMP.ppd"
                  fi
                fi

                # Add the printer
                f_logmessage "ATTENTION, installing printer ${LCL_PrinterName}"
                /usr/sbin/lpadmin -p "${LCL_PrinterName}" -v "${LCL_PrinterURI}" -D "${LCL_PrinterDesc}" -L "${LCL_PrinterLocation}" -P "${LCL_PrinterPPD}" "${LCL_PrinterOptions}" -E

                # If the printer is to be shared, turn on printer sharing
                if test -n "$(echo "${LCL_PrinterOptions}" | grep -i "printer-is-shared=true")"
                then
                  f_logmessage "ATTENTION, enabling printer sharing"
                  /usr/sbin/cupsctl --share-printers
                  /usr/sbin/cupsctl WebInterface=yes
                fi

              fi
            fi
          fi
        fi
        ;;

      Policy)
        LCL_PolicyPath="/usr/local/LabWarden/Policies/custom/${LCL_ObjectName}"
        if ! test -e "${LCL_PolicyPath}"
        then
          LCL_PolicyPath="/usr/local/LabWarden/Policies/${LCL_ObjectName}"
          if ! test -e "${LCL_PolicyPath}"
          then
            LCL_PolicyPath=""
          fi
        fi
        if test -n "${LCL_PolicyPath}"
        then
          LCL_PolicyScriptVersion="$(${LCL_PolicyPath})"
          f_SetPlistProperty "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_ObjectName}:LocalPrefs:Version" "${LCL_PolicyScriptVersion}"
        fi
        
        LCL_TriggeredByCount="$(f_GetPlistArraySize "${LCL_Payload}" ":TriggeredBy")"
        for (( LCL_TriggeredByIndex=0; LCL_TriggeredByIndex<${LCL_TriggeredByCount}; LCL_TriggeredByIndex++ ))
        do
          LCL_TriggeredByEventName=$(f_GetPlistProperty "${LCL_Payload}" ":TriggeredBy:${LCL_TriggeredByIndex}")
          if test -n "${LCL_TriggeredByEventName}"
          then

            # Create object
            /usr/libexec/PlistBuddy >/dev/null 2>&1 -c "Print ':${LCL_TriggeredByEventName}'" "${LCL_ConfigDir}/LabWarden.plist"
            if [ $? -ne 0 ]
            then
              # Add a new object
              /usr/libexec/PlistBuddy 2>/dev/null -c "Add ':${LCL_TriggeredByEventName}' dict" "${LCL_ConfigDir}/LabWarden.plist"
              if [ $? -ne 0 ]
              then
                f_QuickExit "Failed to Add dict ':${LCL_TriggeredByEventName}' to '${LCL_ConfigDir}/LabWarden.plist'"
              fi
            fi

            # Create array
            /usr/libexec/PlistBuddy >/dev/null 2>&1 -c "Print ':${LCL_TriggeredByEventName}:DoesTrigger'" "${LCL_ConfigDir}/LabWarden.plist"
            if [ $? -ne 0 ]
            then
              # Add a new object
              /usr/libexec/PlistBuddy 2>/dev/null -c "Add ':${LCL_TriggeredByEventName}:DoesTrigger' array" "${LCL_ConfigDir}/LabWarden.plist"
              if [ $? -ne 0 ]
              then
                f_QuickExit "Failed to Add dict ':${LCL_TriggeredByEventName}:DoesTrigger' to '${LCL_ConfigDir}/LabWarden.plist'"
              fi
            fi
            
            LCL_DoesTriggerCount="$(f_GetPlistArraySize "${LCL_Payload}" ":${LCL_TriggeredByEventName}:DoesTrigger")"

            if test -z "$(/usr/libexec/PlistBuddy >/dev/null 2>&1 -c "Print ':${LCL_TriggeredByEventName}:DoesTrigger'" "${LCL_ConfigDir}/LabWarden.plist" | grep -v "{" | grep -v "}" | sed "s|^[ ]*||;s|[ ]*$||" | grep -E "^${LCL_ObjectName}$")"
            then
              /usr/libexec/PlistBuddy 2>/dev/null -c "Add ':${LCL_TriggeredByEventName}:DoesTrigger:${LCL_DoesTriggerCount}' string" "${LCL_ConfigDir}/LabWarden.plist"
              if [ $? -ne 0 ]
              then
                f_QuickExit "Failed to Add array entry ':${LCL_TriggeredByEventName}:DoesTrigger:${LCL_DoesTriggerCount}' to '${LCL_ConfigDir}/LabWarden.plist'"
              fi
            
              # Set array Value    
              /usr/libexec/PlistBuddy >/dev/null 2>&1 -c "Set ':${LCL_TriggeredByEventName}:DoesTrigger:${LCL_DoesTriggerCount}' '${LCL_ObjectName}'" "${LCL_ConfigDir}/LabWarden.plist"
            
            fi

          fi
        done
        ;;

      esac
          
    fi
  fi

# Remove temporary files
srm -fR "${GLB_ThisScriptTempDir}"

