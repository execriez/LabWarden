#!/bin/bash
#
# Short:    Sys Policy script - Installs packages from a specified folder
# Author:   Mark J Swift
# Version:  3.2.0
# Modified: 12-Nov-2020
#
# Triggered by the following events:
#   Sys-Poll            (as root)
#   Sys-ManualTrigger   (as root)
#
# Called as follows:    
#   Sys-InstallPackageFromFolder <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <PolicyPrefsFilePath> <SharedPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>

# ---

if [ "$(whoami)" != "root" ]
then
  exit 0
fi

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GLB_SV_CODEVERSION="3.2.0"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST="Sys-SoftwareManifest"

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.
# Look at '/inc-sh/Common.sh' for a complete list.

# ---

bf_InstallPackageFromFolder() # PackageDirPath
{
  local sv_PackageDirPath
  local sv_PackageFilePath
  local sv_PackageFileName
  local iv_PackageFileCreatedEpoch
  local sv_PackageID
  local iv_InstalledCount
  local sv_ArchiveFileName
  local sv_ArchiveTempDirPath
  local bv_ArchiveInstalled
  local bv_InstallStatus

  sv_PackageDirPath="${1}"
  cd "${sv_PackageDirPath}"

  if test -n "${sv_PackageDirPath}"
  then
    # install packages
    while read sv_PackageFilePath
    do
      sv_PackageFileName="$(basename "${sv_PackageFilePath}")"
      iv_PackageFileCreatedEpoch=$(stat -f "%c" "${sv_PackageFilePath}")
      sv_PackageID="${iv_PackageFileCreatedEpoch}:${sv_PackageFileName}"
      if ! test -n "$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Shared:Installed" | grep -v "{" | grep -v "}" | sed "s|^[ ]*||;s|[ ]*$||" | grep -E "^${sv_PackageID}$")"
      then
        sv_WillRestart=$(installer -pkginfo -verbose -package "${sv_PackageFilePath}" | grep "Will Restart" | grep -E "YES$")
        if [ "$(stat -f '%Su' /dev/console)" = "root" ] || [ -z "${sv_WillRestart}" ]
        then
          GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Installing ${sv_PackageFileName}"
          installer 2>&1 -pkg "${sv_PackageFilePath}" -target / >> "${GLB_SV_LOGFILEPATH}"
          if [ $? -eq 0 ]
          then
            GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Successfully installed ${sv_PackageFileName}"
            iv_InstalledCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Shared:Installed")"
            GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Shared:Installed:${iv_InstalledCount}" "${sv_PackageID}"
            if [ -n "${sv_WillRestart}" ]
            then
              GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "The installed Package requires a restart."
              GLB_NF_NAMEDFLAGCREATE "Restart"
            fi
            echo ${GLB_BC_TRUE}
            
          else
            GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELERR} "Failed to install ${sv_PackageFileName}"
            echo ${GLB_BC_FALSE}
            
          fi      
        else
          GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "User is logged in, delaying Install of '${sv_PackageFileName}'."
          echo ${GLB_BC_FALSE}
          
        fi
      fi
    done < <(find "${sv_PackageDirPath}" -iname "*.pkg" -prune)

    # install packages from split tgz archives (.tgz.1 .tgz.2 .tgz.3 etc)
    while read sv_ArchiveFileName
    do
      iv_PackageFileCreatedEpoch=$(stat -f "%c" "${sv_PackageDirPath}/${sv_ArchiveFileName}.tgz.1")
      sv_PackageID="${iv_PackageFileCreatedEpoch}:${sv_ArchiveFileName}.tgz"
      if ! test -n "$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Shared:Installed" | grep -v "{" | grep -v "}" | sed "s|^[ ]*||;s|[ ]*$||" | grep -E "^${sv_PackageID}$")"
      then
        GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Unarchiving ${sv_ArchiveFileName}.tgz"
        sv_ArchiveTempDirPath="$(mktemp -dq ${GLB_SV_THISSCRIPTTEMPDIRPATH}/${sv_ArchiveFileName}-XXXXXXXX)"
        cat $(ls -1 "${sv_PackageDirPath}" | grep -E "${sv_ArchiveFileName}\.tgz\.[0-9]{1}$" | sort) | tar -xvzf - -C "${sv_ArchiveTempDirPath}"
        bv_InstallStatus="$(bf_InstallPackageFromFolder "${sv_ArchiveTempDirPath}")"
        if [ -z "$(echo "${bv_InstallStatus}" | grep ${GLB_BC_FALSE})" ]
        then
          iv_InstalledCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Shared:Installed")"
          GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Shared:Installed:${iv_InstalledCount}" "${sv_PackageID}"
        fi
        echo "${bv_InstallStatus}"
      fi
    done < <(ls -1 "${sv_PackageDirPath}" | grep -E "\.tgz\.[0-9]{1}$" | sed -E "s|(.*)(\.tgz\.[0-9]{1}$)|\1|" | sort -u)
  fi
}

# ---

case ${GLB_SV_EVENTNAME} in
    
Sys-Idle|Sys-ManualTrigger)
  bv_PackagesInstalled=${GLB_BC_FALSE}
  iv_PathCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Path")"
  for (( iv_LoopCount=0; iv_LoopCount<${iv_PathCount}; iv_LoopCount++ ))
  do
    sv_PackageDirPath="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Path:${iv_LoopCount}")"
    if test -n "${sv_PackageDirPath}"
    then
      bv_InstallStatus="$(bf_InstallPackageFromFolder "${sv_PackageDirPath}")"
    fi
  done
  ;;

Sys-PolicyInstall|Sys-PolicyUninstall)
  # Do nothing
  ;;
  
*)
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported."
  ;;

esac
  
# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---
