#!/bin/bash
#
# Short:    App Policy Script - Sets up Firefox so that it can run on network homes
# Author:   Mark J Swift
# Version:  3.3.0
# Modified: 22-May-2022
#
# Triggered by the following events:
#   App-WillLaunch   (as user)
#   App-DidTerminate (as user)
#
# Called as follows:    
#   App-FirefoxFixForNetworkHomes <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <PolicyPrefsFilePath> <SharedPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GLB_SV_CODEVERSION="3.3.0"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST="Usr-AppFirefoxFixForHomeNotLocal"

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.

# ---

if [ "${GLB_BV_CONSOLEUSERISLOCAL}" = ${GLB_BC_TRUE} ]
then
  # Exit if user account is local
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Policy aborted - User account is local."
else
  if [ "${GLB_BV_CONSOLEUSERHOMEISLOCAL}" = ${GLB_BC_TRUE} ]
  then
    # Exit if the user home is on a local drive
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Policy aborted - user home is on a local drive."
  else
    if [ -z "${GLB_SV_CONSOLEUSERSHAREDIRPATH}" ]
    then
      # Exit if the user home is undefined or the share is unavailable
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Network home is undefined or the share is unavailable."
    else
      if [ ! -e "${GLB_SV_CONSOLEUSERSHAREDIRPATH}" ]
      then
        # Exit if the Network home doesn't exist or is unavailable
        GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Network home doesn't exist or is unavailable."
      else
      
# ---

case ${GLB_SV_EVENTNAME} in
    
App-WillLaunch)  
  sv_FfoxLinksDirPath="${GLB_SV_RUNUSERTEMPDIRPATH}/${GLB_SV_LAUNCHEDAPPBUNDLEIDENTIFIER}/Links"
  if test -d "${sv_FfoxLinksDirPath}"
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "No need to fix - as fix is already in place."

  else
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Implementing Fix for Firefox network profiles."

    # Quit Firefox
    kill ${GLB_IV_LAUNCHEDAPPPROCESSID}

    # Create Firefox folder if necessary
    sv_FfoxConfigDirPath="${GLB_SV_CONSOLEUSERHOMEDIRPATH}/Library/Application Support/Firefox"
    mkdir -p "${sv_FfoxConfigDirPath}"

    # Get the current profile folder (if any)
    sv_FfoxProfile=""
    if test -f "${sv_FfoxConfigDirPath}/profiles.ini"
    then
      sv_FfoxProfile=$(cat "${sv_FfoxConfigDirPath}/profiles.ini" | grep "Path=" | cut -d"=" -f2)
    fi

    # If profile doesnt exist, then Firefox has never been set up
    if [ -z "${sv_FfoxProfile}" ] || [ -f "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/prefs.js" ]
    then
      # Set up Firefox for the first time
      sv_FfoxProfile="Profiles/mozilla.default"
      mkdir -p "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}"

      cat << ENDFFOXPFL > "${sv_FfoxConfigDirPath}/profiles.ini"
[General]
StartWithLastProfile=1

[Profile0]
Name=default
IsRelative=1
Path=${sv_FfoxProfile}
ENDFFOXPFL

      cat << ENDFFOXPRF > "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/prefs.js"
# Mozilla User Preferences
user_pref("browser.shell.checkDefaultBrowser", false);
ENDFFOXPRF

    fi

    mkdir -p "${sv_FfoxLinksDirPath}"
    ln -sf "${sv_FfoxLinksDirPath}/places.sqlite-shm" "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/places.sqlite-shm"
    ln -sf "${sv_FfoxLinksDirPath}/webappsstore.sqlite-shm" "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/webappsstore.sqlite-shm"
    ln -sf "${sv_FfoxLinksDirPath}/cookies.sqlite-shm" "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/cookies.sqlite-shm"
    
    # Re-launch Firefox
    /usr/bin/open -b "org.mozilla.firefox"
  fi
  ;;

App-DidTerminate)
  sv_FfoxLinksDirPath="${GLB_SV_RUNUSERTEMPDIRPATH}/${GLB_SV_LAUNCHEDAPPBUNDLEIDENTIFIER}/Links"
  if ! test -d "${sv_FfoxLinksDirPath}"
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "No need to remove fix, as fix is not in place."

  else
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Removing Fix for Firefox network profiles."

    # If user home is on a network drive, undo any links we might have created
    sv_FfoxConfigDirPath="${GLB_SV_CONSOLEUSERHOMEDIRPATH}/Library/Application Support/Firefox"
      
    # Get the current profile folder (if any)
    sv_FfoxProfile=""
    if test -f "${sv_FfoxConfigDirPath}/profiles.ini"
    then
      sv_FfoxProfile=$(cat "${sv_FfoxConfigDirPath}/profiles.ini" | grep "Path=" | cut -d"=" -f2)
    fi

    # Check the profile exists
    if test -n "${sv_FfoxProfile}"
    then
      # If these files are links, then delete
      if test -L "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/places.sqlite-shm"
      then
        rm -f "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/places.sqlite-shm"
      fi
      if test -L "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/webappsstore.sqlite-shm"
      then
        rm -f "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/webappsstore.sqlite-shm"
      fi
      if test -L "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/cookies.sqlite-shm"
      then
        rm -f "${sv_FfoxConfigDirPath}/${sv_FfoxProfile}/cookies.sqlite-shm"
      fi
    fi
  fi
  ;;

Usr-PolicyInstall|Usr-PolicyUninstall)
  # Do nothing
  ;;
  
*)
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported."
  ;;

esac

# ---
      
      fi
    fi
  fi
fi

# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---
