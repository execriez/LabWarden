#!/bin/bash
#
# Short:    Utility Script - Pack a payload file for AD deployment
# Author:   Mark J Swift
# Version:  2.0.19
# Modified: 22-Oct-2017
#
# Called as follows:    
#   PackForDeployment <somefile>
#
# Outputs the path to the packed file.
#
# This script packs a payload file (via gzip & base64). 
# The resultant text should be copied into an AD groups 'Notes' field.
# Any member of the group (user or workstation) will receive the payload
# at the next gpupdate.

# ---

sv_CodeVersion="2.0.19"

# ---

# Load the contants, only if they are not already loaded
if test -z "${GLB_sv_ProjectSignature}"
then
  . /usr/local/LabWarden/inc/Constants.sh
fi

# -- Get some info about this script

# Full source of this script
sv_ThisScriptFilePath="${0}"

# Get dir of this script
sv_ThisScriptDirPath="$(dirname "${sv_ThisScriptFilePath}")"

# Get filename of this script
sv_ThisScriptFileName="$(basename "${sv_ThisScriptFilePath}")"

# Filename without extension
sv_ThisScriptName="$(basename "${sv_ThisScriptFilePath}" | sed 's|\.[^.]*$||')"

# ---

cd "${sv_ThisScriptDirPath}"

sv_PayloadFilePath="${1}"

if test -z "${sv_PayloadFilePath}"
then
  echo "This script packs (via gzip & base64) a payload file/folder for AD deployment"
  echo "  Usage: ${sv_ThisScriptFileName} SomePayloadFileOrFolder"
  exit 0
fi

if ! test -e "${sv_PayloadFilePath}"
then
  echo "File/folder not found - ${sv_PayloadFilePath}"
  exit 0
fi

# Filename of the payload
sv_DocFileName="$(basename "${sv_PayloadFilePath}")"

# Path to the payload
sv_DocDirPath="$(dirname "${sv_PayloadFilePath}")"

# Filename without extension
sv_DocName=$(echo "${sv_DocFileName}" | sed "s|\.[^.]*$||")

# A place to store the packed payloads
sv_PackedDirPath="${sv_DocDirPath}/Packed"
mkdir -p "${sv_PackedDirPath}"

# Filename for the gzip, base64 payload
sv_base64tgzFilePath="${sv_PackedDirPath}/${sv_DocName}.txt"

# Create a temporary folder
sv_TempDirPath=$(mktemp -d /tmp/XXXXXXXX)

# Copy the payload to a temporary folder
if test -d "${sv_PayloadFilePath}"
then
  cp -pR "${sv_PayloadFilePath}/" "${sv_TempDirPath}/"

else
  cp "${sv_PayloadFilePath}" "${sv_TempDirPath}/"

fi

# Shrink the payload if possible
ls -1 "${sv_TempDirPath}" | while read sv_PayloadFileName
do
  if [ "$(echo ${sv_DocFileName} | tr "[A-Z]" "[a-z]")" = "policybanner.rtf" ]
  then
    sv_PayloadFileExt="PolicyBanner-rtf"
    
  else
    sv_PayloadFileExt=$(echo "${sv_PayloadFileName}" | sed 's|^[^\.]*\.||;s|\.|-|')
    
  fi
  if test -e /usr/local/${GLB_sv_ProjectName}/PayloadHandlers/${sv_PayloadFileExt}-shrink
  then
    sv_ShrunkPayloadFilePath="$(/usr/local/${GLB_sv_ProjectName}/PayloadHandlers/${sv_PayloadFileExt}-shrink "${sv_TempDirPath}/${sv_PayloadFileName}")"
    if test -n "${sv_ShrunkPayloadFilePath}"
    then
      rm -f "${sv_TempDirPath}/${sv_PayloadFileName}"
      cp "${sv_ShrunkPayloadFilePath}" "${sv_TempDirPath}/"
    fi
  fi
done

# tar gzip & base64 the payload
cd "${sv_TempDirPath}"
tar -c * | gzip -9 | base64 -b 30 | tr -s "\n" | awk '{ sub(/$/,"\r"); print }' > "${sv_base64tgzFilePath}"
cd "${sv_PackedDirPath}"


# Delete the temporary folder
rm -fR "${sv_TempDirPath}"

#
sv_base64tgzFileSize=$(stat -f "%z" "${sv_base64tgzFilePath}")
if [ ${sv_base64tgzFileSize} -le 1024 ]
then
  echo "Unpack the payload file into SomeDirectory as follows"
  echo "  cd SomeDirectory"
  echo "  cat ${sv_base64tgzFilePath} | base64 -D | tar -xvzf -"

else
  if [ ${sv_base64tgzFileSize} -le 10240 ]
  then
    split -a 1 -b 1k "${sv_base64tgzFilePath}" "${sv_DocName}-"
    rm -f "${sv_base64tgzFilePath}"
    ls -1 "${sv_PackedDirPath}" | grep -E "${sv_DocName}-[a-j]{1}$" | while read sv_PartFileName
    do
      iv_PartNo=$(echo ${sv_PartFileName} | sed -E "s|(.*)(-[a-j]{1}$)|\2|" | tr [a-j] [0-9])
      mv "${sv_PartFileName}" "${sv_DocName}${iv_PartNo}.txt"
    done

    echo "Note, the payload is too big to fit into a single AD Notes field"
    echo "Unpack the payload file into SomeDirectory as follows"
    echo "  cd SomeDirectory"
    printf "  cat "
    ls -1 "${sv_PackedDirPath}" | sort | grep -E "${sv_DocName}-[0-9]{1}\.txt$" | while read sv_PartFileName
    do
      printf "'${sv_PartFileName}' "
    done
    echo "| base64 -D | tar -xvzf -"

  else
    echo "Sorry, the payload is realistically just too big."

  fi
fi

