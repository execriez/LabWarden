#!/bin/bash
#
# Short:    Sys Policy Script - Update RemoteDesktop Info Field 4 with CDP info
# Author:   Mark J Swift
# Version:  3.3.0
# Modified: 22-May-2022
#
# Triggered by the following events:
#   Sys-NetworkUp    (as root)
#
#   ... see associated config 'Sys-CDPInfo.mobileconfig'
#
# Called as follows:    
#   Sys-CDPInfo <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <PolicyPrefsFilePath> <SharedPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>

# ---

if [ "$(whoami)" != "root" ]
then
  exit 0
fi

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GGLB_SV_CODEVERSION="3.3.0"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST=""

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.

# ---

# Lets handle the events

case ${GLB_SV_EVENTNAME} in

Sys-NetworkUp)
  # (as root) - Do this when the network comes up

  bv_ValidCDPsource=${GLB_BC_FALSE}

  # Check if the active network interface is in the list of valid CDP source interfaces
  iv_ObjectCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:CDPsource")"
  for (( iv_LoopCount=0; iv_LoopCount<${iv_ObjectCount}; iv_LoopCount++ ))
  do
    sv_CDPsourceDevice="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:CDPsource:${iv_LoopCount}:Device")"
    sv_CDPsourceHardware="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:CDPsource:${iv_LoopCount}:Hardware")"
    if [ "${GLB_SV_IPV4PRIMARYSERVICEDEVICENAME}" = "${sv_CDPsourceDevice}" ] && [ "${GLB_SV_IPV4PRIMARYSERVICEHARDWARENAME}" = "${sv_CDPsourceHardware}" ]
    then
      bv_ValidCDPsource=${GLB_BC_TRUE}
      break
    fi
  done

  if [ "${bv_ValidCDPsource}" = ${GLB_BC_TRUE} ]
  then

    sv_CDPFilePath="${GLB_SV_THISSCRIPTTEMPDIRPATH}/CDP.txt"
    rm -f ${sv_CDPFilePath}
  
    # list the CDP info to a file
    tcpdump -nn -v -i en0 -s 1500 -c 1 'ether[20:2] == 0x2000' > ${sv_CDPFilePath} &
    iv_pid=$!

    # Wait for the CDP file to contain some info
    iv_DelayCount=0
    while [ ${iv_DelayCount} -lt 90 ]
    do
      if test -s "${sv_CDPFilePath}"
      then
        break
      fi
  
      # we don't want to hog the CPU - so lets sleep a while
      sleep 1

      iv_DelayCount=$((${iv_DelayCount}+1))
    done

    # If we got CDP info update the Remote access computer info field 4
    if test -s "${sv_CDPFilePath}"
    then
      sv_CDPplatform=$(cat "${sv_CDPFilePath}" | tr -d "\t" | grep -E "^Platform" | sed "s|[^']* ||" | tr -d "'")
      sv_CDPdeviceid=$(cat "${sv_CDPFilePath}" | tr -d "\t" | grep -E "^Device-ID" | sed "s|[^']* ||" | tr -d "'")
      sv_CDPaddress=$(cat "${sv_CDPFilePath}" | tr -d "\t" | grep -E "^Address" | sed "s|[^']* ||" | tr -d "'")
      sv_CDPport=$(cat "${sv_CDPFilePath}" | tr -d "\t" | grep -E "^Port-ID" | sed "s|[^']* ||" | tr -d "'")
    
      sv_ComputerInfo4="${sv_CDPplatform}, ${sv_CDPdeviceid} (${sv_CDPaddress}), ${sv_CDPport}"
    
      GLB_NF_SETLOGINWINDOWLINE 4 "${sv_ComputerInfo4}"

    else
      # Clear the RemoteDesktop Computer Info Fields #4
      GLB_NF_SETLOGINWINDOWLINE 4 ""
      kill ${iv_pid}
    
    fi
    
  else
    # Clear the RemoteDesktop Computer Info Fields #4
    GLB_NF_SETLOGINWINDOWLINE 4 ""
  
  fi
  ;;


Sys-PolicyInstall|Sys-PolicyUninstall)
  # Clear the RemoteDesktop Computer Info Fields #4
  GLB_NF_SETLOGINWINDOWLINE 4 ""
  ;;
  
*)
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported."
  ;;

esac
    
# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---

# Notes to self
# -display cisco CDP INFO
#  tcpdump -nn -v -i en0 -s 1500 -c 1 'ether[20:2] == 0x2000'
# -display tcp traffic
#  nettop -m tcp
# -display internet traffic
#  tcpdump -i en0 -n port 80
# -display traffic to a particular host (which you could pick out of the above outputs)
#  tcpdump -i en0 -n host 95.140.226.15
