#!/bin/bash
#
# Short:    Sys Policy script - adds or removes a printer
# Author:   Mark J Swift
# Version:  3.2.5
# Modified: 30-Dec-2020
#
# Triggered by the following events:
#   Sys-Poll (as root)
#
#   ... see associated config 'Sys-PrinterManifest.mobileconfig'
#
# Called as follows:    
#   Sys-PrinterManifest <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <PolicyPrefsFilePath> <SharedPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>

# ---

if [ "$(whoami)" != "root" ]
then
  exit 0
fi

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GLB_SV_CODEVERSION="3.2.5"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST=""

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.
# Look at '/inc-sh/Common.sh' for a complete list.

# ---

case ${GLB_SV_EVENTNAME} in

Sys-Poll|Sys-PolicyInstall|Sys-PolicyUninstall)

  sv_Action="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Action")"
  if [ "${GLB_SV_EVENTNAME}" = "Sys-PolicyUninstall" ]
  then
    sv_Action="Uninstall"
  fi
  if [ "${sv_Action}" != "Uninstall" ]
  then
    sv_Action="Install"
  fi

  iv_ItemCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Item")"
  if [ ${iv_ItemCount} -gt 0 ]
  then
    for (( iv_ItemIndex=0; iv_ItemIndex<${iv_ItemCount}; iv_ItemIndex++ ))
    do
      sv_DisplayName=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Item:${iv_ItemIndex}:DisplayName")
      if test -n "${sv_DisplayName}"
      then
        sv_PrinterDesc=$(echo $sv_DisplayName | tr " " "_")
        sv_DisplayName=$(echo $sv_PrinterDesc | tr "-" "_")

        if [ "${sv_Action}" = "Uninstall" ]
        then
          # We are uninstalling the printer
          if test -n "$(lpstat 2>/dev/null -a | cut -d" " -f1 | grep "${sv_DisplayName}")"
          then
            # printer exists
            GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Uninstalling printer ${sv_DisplayName}"
            GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "Executing /usr/sbin/lpadmin 2>/dev/null -x '${sv_DisplayName}'"
            /usr/sbin/lpadmin 2>/dev/null -x "${sv_DisplayName}"
          fi
  
        else
          # We are installing the printer

          if test -z "$(lpstat 2>/dev/null -a | cut -d" " -f1 | grep "${sv_DisplayName}")"
          then
            # printer doesnt exist
            GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "Printer '${sv_DisplayName}' not yet installed"

            sv_DeviceURI=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Item:${iv_ItemIndex}:DeviceURI")
            if test -n "${sv_DeviceURI}"
            then
              sv_PPDURI=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Item:${iv_ItemIndex}:PPDURI")
              if test -n "${sv_PPDURI}"
              then
                GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "PPDURI '${sv_PPDURI}'"
                if test -z "$(echo ${sv_PPDURI} | grep -E '^[^:]*://')"
                then
                  # URI has no URL access mechanism - so the URI probably only specified a filename
                  sv_PPDURI="file://localhost/Library/Printers/PPDs/Contents/Resources/${sv_PPDURI}"
                fi
                GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "PPDURI '${sv_PPDURI}'"
                sv_PrinterPPDFilePath=$(GLB_SF_RESOLVEFILEURITOPATH "${sv_PPDURI}")
                GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "PrinterPPDFilePath '${sv_PrinterPPDFilePath}'"

                if test -n "${sv_PrinterPPDFilePath}"
                then
                  sv_PrinterOptions="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Item:${iv_ItemIndex}:Options")"
                  if test -z "${sv_PrinterOptions}"
                  then
                    sv_PrinterOptions="-o printer-is-shared=false -o printer-error-policy=abort-job"
                  fi
                  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "Options '${sv_PrinterOptions}'"

                  sv_PrinterLocation=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Item:${iv_ItemIndex}:Location")
                  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "Location '${sv_PrinterLocation}'"

                  # If the ppd is gzipped, extract it.
                  if [ "$(echo ${sv_PrinterPPDFilePath} | tr "." "\n" | tail -n1)" = "gz" ]
                  then
                    gunzip -c "${sv_PrinterPPDFilePath}" > "${GLB_SV_THISSCRIPTTEMPDIRPATH}/UNGZ.ppd"
                    sv_PrinterPPDFilePath="${GLB_SV_THISSCRIPTTEMPDIRPATH}/UNGZ.ppd"
                  fi
  
                  # if we downloaded the PPD from a print server, remove filters
                  if test -n "$(echo "${sv_PPDURI}" | grep ":631/")"
                  then
                    if test -n "$(cat "${sv_PrinterPPDFilePath}" | grep "DOCTYPE HTML PUBLIC")"
                    then
                      sv_ErrorMessage="$(cat "${sv_PrinterPPDFilePath}" | grep -i '<TITLE>' | tr -d '\r' | tr -d '\n' | tr '\t' ' ' | sed 's|\<[^\>]*\>||g;s|^[ ]*||;s|[ ]*$||')"
                      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELERR} "Got error '${sv_ErrorMessage}' while downloading PPD from ${sv_PPDURI}"
                      rm -f "${sv_PrinterPPDFilePath}"
                    else
                      cat "${sv_PrinterPPDFilePath}" | grep -v "cupsFilter" | grep -v "cupsPreFilter" | grep -v "APAutoSetupTool" > "${GLB_SV_THISSCRIPTTEMPDIRPATH}/TEMP.ppd"
                      echo '*cupsFilter: "application/pdf 0 -"' >> "${GLB_SV_THISSCRIPTTEMPDIRPATH}/TEMP.ppd"
                      echo '*cupsFilter: "image/* 0 -"' >> "${GLB_SV_THISSCRIPTTEMPDIRPATH}/TEMP.ppd"
                      echo '*cupsFilter: "application/vnd.cups-command 0 -"' >> "${GLB_SV_THISSCRIPTTEMPDIRPATH}/TEMP.ppd"
                      rm -f "${sv_PrinterPPDFilePath}"
                      sv_PrinterPPDFilePath="${GLB_SV_THISSCRIPTTEMPDIRPATH}/TEMP.ppd"
                    fi

                  else
                    # If there's a setup tool call it. It copies a modified PPD to stdout
                    sv_SetuptoolFilePath=$(cat "${sv_PrinterPPDFilePath}" | grep "APAutoSetupTool" | cut -d'"' -f2)
                    if test -n "${sv_SetuptoolFilePath}"
                    then
                      "${sv_SetuptoolFilePath}" "${sv_DeviceURI}" "${sv_PrinterPPDFilePath}" > "${GLB_SV_THISSCRIPTTEMPDIRPATH}/TEMP.ppd"
                      rm -f "${sv_PrinterPPDFilePath}"
                      sv_PrinterPPDFilePath="${GLB_SV_THISSCRIPTTEMPDIRPATH}/TEMP.ppd"
                    fi
                  fi

                  if test -f "${sv_PrinterPPDFilePath}"
                  then
                    # If we have a valid PPD file, add the printer
                    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Installing printer ${sv_DisplayName}"
                    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "Executing /usr/sbin/lpadmin -E -p '${sv_DisplayName}' -v '${sv_DeviceURI}' -D '${sv_PrinterDesc}' -L '${sv_PrinterLocation}' -P '${sv_PrinterPPDFilePath}' ${sv_PrinterOptions}"

                    sv_err=$(/usr/sbin/lpadmin 2>&1 -E -p "${sv_DisplayName}" -v "${sv_DeviceURI}" -D "${sv_PrinterDesc}" -L "${sv_PrinterLocation}" -P "${sv_PrinterPPDFilePath}" "${sv_PrinterOptions}")
                    iv_err=$?
                    if [ ${iv_err} -ne 0 ]
                    then
                      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELERR} "Error adding printer '${sv_DisplayName}'; (${iv_err}) ${sv_err}"

                    else
                      # Un-pause the printer
                      cupsenable "${sv_DisplayName}"

                      # allow print jobs
                      cupsaccept "${sv_DisplayName}"

                      # If the printer is to be shared, turn on printer sharing
                      if test -n "$(echo "${sv_PrinterOptions}" | grep -i "printer-is-shared=true")"
                      then
                        GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Enabling printer sharing for printer ${sv_DisplayName}"
                        /usr/sbin/cupsctl --share-printers
                        /usr/sbin/cupsctl WebInterface=yes
                      fi
      
                    fi
                  fi

                fi
              fi
            fi
          fi

        fi
      fi
    done
  fi
  ;;
  
*)
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported."
  ;;

esac

# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---
