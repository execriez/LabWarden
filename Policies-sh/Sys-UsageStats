#!/bin/bash
#
# Short:    Gen Policy script - Collects user usage stats based on opening hours
# Author:   Mark J Swift
# Version:  3.3.0
# Modified: 22-May-2022
#
# Triggered by the following events:
#   Sys-Boot        (as root)
#   Sys-Poll        (as root)
#
# Called as follows:    
#   Sys-UsageStats <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <PolicyPrefsFilePath> <SharedPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>
# 

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GLB_SV_CODEVERSION="3.3.0"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST=""

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.

# ---

nf_CopyRecord() # FromRecord ToRecord
{
  local iv_FromRecord
  local iv_ToRecord
  local iv_Tot
  
  iv_FromRecord=${1}
  iv_ToRecord=${2}
  
  iv_Tot=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${iv_FromRecord}")
  if [ -n "${iv_Tot}" ]
  then
    GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${iv_ToRecord}" ${iv_Tot}
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Copying ${iv_Tot} from ${iv_FromRecord} to ${iv_ToRecord}"
  fi
}

# convert previous record format that could be influenced by locale changes
nf_ConvertRecords() # noargs
{
  local iv_Tot
  local iv_HourNum
  local iv_DayNum
  local sv_DayName
  local iv_MonthNum
  local sv_MonthName
  local sv_GlobalAuditTag
  local sv_ThisAuditTag
  local iv_FirstAuditEpoch
  
  iv_FirstAuditEpoch=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:FirstAuditEpoch")
  if [ -n "${iv_FirstAuditEpoch}" ]
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Begin convert audit records from previous version"

    # ---

   sv_GlobalAuditTag="0000-00"
   sv_ThisAuditTag=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:AuditTag")

    # ---

    nf_CopyRecord "FirstAuditEpoch" "Epoch:First"
    nf_CopyRecord "LastAuditEpoch" "Epoch:Last"

    nf_CopyRecord "TotalSecs" "${sv_GlobalAuditTag}:Total:Count"
    nf_CopyRecord "InUseSecs" "${sv_GlobalAuditTag}:Total:InUse"
    nf_CopyRecord "IdleSecs" "${sv_GlobalAuditTag}:Total:Idle"
    nf_CopyRecord "${sv_ThisAuditTag}:TotalSecs" "${sv_ThisAuditTag}:Total:Count"
    nf_CopyRecord "${sv_ThisAuditTag}:InUseSecs" "${sv_ThisAuditTag}:Total:InUse"
    nf_CopyRecord "${sv_ThisAuditTag}:IdleSecs" "${sv_ThisAuditTag}:Total:Idle"

    iv_HourNum=0
    while [ ${iv_HourNum} -lt 24 ]
    do
      iv_HourNumXX=$(printf %02d ${iv_HourNum})
      nf_CopyRecord "${iv_HourNumXX}:InUseSecs" "${sv_GlobalAuditTag}:Hour:InUse:${iv_HourNum}"
      nf_CopyRecord "${iv_HourNumXX}:IdleSecs" "${sv_GlobalAuditTag}:Hour:Idle:${iv_HourNum}"
      nf_CopyRecord "${sv_ThisAuditTag}:${iv_HourNumXX}:InUseSecs" "${sv_ThisAuditTag}:Hour:InUse:${iv_HourNum}"
      nf_CopyRecord "${sv_ThisAuditTag}:${iv_HourNumXX}:IdleSecs" "${sv_ThisAuditTag}:Hour:Idle:${iv_HourNum}"
      iv_HourNum=$((${iv_HourNum}+1))
    done

    iv_DayNum=0
    while [ ${iv_DayNum} -lt 7 ]
    do
      sv_DayName=$(date -r $(( 259200+(86400*${iv_DayNum}) )) "+%a")
      nf_CopyRecord "${sv_DayName}:InUseSecs" "${sv_GlobalAuditTag}:Day:InUse:${iv_DayNum}"
      nf_CopyRecord "${sv_DayName}:IdleSecs" "${sv_GlobalAuditTag}:Day:Idle:${iv_DayNum}"
      nf_CopyRecord "${sv_ThisAuditTag}:${sv_DayName}:InUseSecs" "${sv_ThisAuditTag}:Day:InUse:${iv_DayNum}"
      nf_CopyRecord "${sv_ThisAuditTag}:${sv_DayName}:IdleSecs" "${sv_ThisAuditTag}:Day:Idle:${iv_DayNum}"
      iv_DayNum=$((${iv_DayNum}+1))
    done

    iv_MonthNum=0
    while [ ${iv_MonthNum} -lt 12 ]
    do
      sv_MonthName=$(date -r $(( (31*86400*${iv_MonthNum})+345600 )) "+%b")
      nf_CopyRecord "${sv_MonthName}:InUseSecs" "${sv_GlobalAuditTag}:Month:InUse:${iv_MonthNum}"
      nf_CopyRecord "${sv_MonthName}:IdleSecs" "${sv_GlobalAuditTag}:Month:Idle:${iv_MonthNum}"
      nf_CopyRecord "${sv_ThisAuditTag}:${sv_MonthName}:InUseSecs" "${sv_ThisAuditTag}:Month:InUse:${iv_MonthNum}"
      nf_CopyRecord "${sv_ThisAuditTag}:${sv_MonthName}:IdleSecs" "${sv_ThisAuditTag}:Month:Idle:${iv_MonthNum}"
      iv_MonthNum=$((${iv_MonthNum}+1))
    done
    
    # ---
    
    sleep 2

    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:FirstAuditEpoch"
    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:LastAuditEpoch"

    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:TotalSecs"
    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:InUseSecs"
    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:IdleSecs"
    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:TotalSecs"
    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:InUseSecs"
    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:IdleSecs"

    iv_HourNum=0
    while [ ${iv_HourNum} -lt 24 ]
    do
      iv_HourNumXX=$(printf %02d ${iv_HourNum})
      GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${iv_HourNumXX}"
      GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:${iv_HourNumXX}"
      iv_HourNum=$((${iv_HourNum}+1))
    done

    iv_DayNum=0
    while [ ${iv_DayNum} -lt 7 ]
    do
      sv_DayName=$(date -r $(( 259200+(86400*${iv_DayNum}) )) "+%a")
      GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_DayName}"
      GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:${sv_DayName}"
      iv_DayNum=$((${iv_DayNum}+1))
    done

    iv_MonthNum=0
    while [ ${iv_MonthNum} -lt 12 ]
    do
      sv_MonthName=$(date -r $(( (31*86400*${iv_MonthNum})+345600 )) "+%b")
      GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_MonthName}"
      GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:${sv_MonthName}"
      iv_MonthNum=$((${iv_MonthNum}+1))
    done
    
    # ---

    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "End convert audit records from previous version"
  fi
}

# Increment Record by Amount. If Amount var is not passed, then reset Record to zero
nf_UpdateRecord() #Record Amount
{
  local iv_ThisRecord
  local iv_ThisAmount
  local iv_Tot
  
  iv_ThisRecord=${1}
  iv_ThisAmount=${2}

  if [ -z "${iv_ThisAmount}" ]
  then
    iv_Tot=0
    
  else
    iv_Tot=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${iv_ThisRecord}")
    if [ -z "${iv_Tot}" ]
    then
      iv_Tot=0
    fi
    iv_Tot=$((${iv_Tot}+${iv_ThisAmount}))
    
  fi

  GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${iv_ThisRecord}" ${iv_Tot}

  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Setting ${iv_ThisRecord} to value ${iv_Tot}"
}

# Initialise record counts
nf_PrepRecords() # noargs
{
  local iv_HourNum
  local iv_DayNum
  local sv_DayName
  local iv_MonthNum
  local sv_MonthName
  local sv_GlobalAuditTag
  local sv_ThisAuditTag
  local iv_NowEpoch
  local iv_FirstAuditEpoch
  
  iv_NowEpoch=$(date -u "+%s")

  iv_FirstAuditEpoch=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:Epoch:First")
  if [ -z "${iv_FirstAuditEpoch}" ]
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Begin initialising audit records"

    GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:Epoch:First" ${iv_NowEpoch}
    GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:Epoch:Last" ${iv_NowEpoch}

    sv_GlobalAuditTag="0000-00"
    sv_ThisAuditTag=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:AuditTag")

    nf_UpdateRecord "${sv_GlobalAuditTag}:Total:Count"
    nf_UpdateRecord "${sv_GlobalAuditTag}:Total:InUse"
    nf_UpdateRecord "${sv_GlobalAuditTag}:Total:Idle"
    nf_UpdateRecord "${sv_ThisAuditTag}:Total:Count"
    nf_UpdateRecord "${sv_ThisAuditTag}:Total:InUse"
    nf_UpdateRecord "${sv_ThisAuditTag}:Total:Idle"

    iv_HourNum=0
    while [ ${iv_HourNum} -lt 24 ]
    do
      nf_UpdateRecord "${sv_GlobalAuditTag}:Hour:InUse:${iv_HourNum}"
      nf_UpdateRecord "${sv_GlobalAuditTag}:Hour:Idle:${iv_HourNum}"
      nf_UpdateRecord "${sv_ThisAuditTag}:Hour:InUse:${iv_HourNum}"
      nf_UpdateRecord "${sv_ThisAuditTag}:Hour:Idle:${iv_HourNum}"
      iv_HourNum=$((${iv_HourNum}+1))
    done

    iv_DayNum=0
    while [ ${iv_DayNum} -lt 7 ]
    do
      sv_DayName=$(date -r $(( 259200+(86400*${iv_DayNum}) )) "+%a")
      nf_UpdateRecord "${sv_GlobalAuditTag}:Day:InUse:${iv_DayNum}"
      nf_UpdateRecord "${sv_GlobalAuditTag}:Day:Idle:${iv_DayNum}"
      nf_UpdateRecord "${sv_ThisAuditTag}:Day:InUse:${iv_DayNum}"
      nf_UpdateRecord "${sv_ThisAuditTag}:Day:Idle:${iv_DayNum}"
      iv_DayNum=$((${iv_DayNum}+1))
    done

    iv_MonthNum=0
    while [ ${iv_MonthNum} -lt 12 ]
    do
      sv_MonthName=$(date -r $(( (31*86400*${iv_MonthNum})+345600 )) "+%b")
      nf_UpdateRecord "${sv_GlobalAuditTag}:Month:InUse:${iv_MonthNum}"
      nf_UpdateRecord "${sv_GlobalAuditTag}:Month:Idle:${iv_MonthNum}"
      nf_UpdateRecord "${sv_ThisAuditTag}:Month:InUse:${iv_MonthNum}"
      nf_UpdateRecord "${sv_ThisAuditTag}:Month:Idle:${iv_MonthNum}"
      iv_MonthNum=$((${iv_MonthNum}+1))
    done
        
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "End initialising audit records"
  fi
}

# Return the next epoch that matches with the given unit value
if_NextUnitValueEpoch()   # ReferenceEpoch, Unit (i.e. S, M, H, d, m or Y), Value
{
  local iv_ReferenceEpoch
  local sv_Unit
  local iv_Value
  local sv_NewDateString
  local iv_NewEpoch
  local sv_NextUnit
  
  iv_ReferenceEpoch=${1}
  sv_Unit=${2}
  iv_Value=${3}
  
  sv_NewDateString=$(echo "%S:%M:%H:%d:%m:%Y" | sed "s|%"${sv_Unit}"|"${iv_Value}"|")
  iv_NewEpoch=$(date -j -f "%S:%M:%H:%d:%m:%Y" $(date -r ${iv_ReferenceEpoch} "+"${sv_NewDateString}) "+%s")
  
  if [ ${iv_NewEpoch} -ge ${iv_ReferenceEpoch} ]
  then
    iv_ReferenceEpoch=${iv_NewEpoch}
  else
    sv_NextUnit=$(echo "SMHdmY" | tr "${sv_Unit}" "\n" | tail -n1 | cut -c1)
    if [ -n "${sv_NextUnit}" ]
    then
      iv_ReferenceEpoch=$(date -j -r ${iv_NewEpoch} -v +1${sv_NextUnit} +%s)
    fi
  fi

  echo "${iv_ReferenceEpoch}"
}

nf_FirstConfig() # noargs
{
  local iv_FirstConfig
  local iv_HolidayPrefCount
  local iv_HolidayIndex
  local iv_ReferenceEpoch
  local bv_UseDefaultValue
  local iv_UnitValue
  local iv_StartEpoch
  local iv_EndEpoch

  iv_FirstConfig=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:Epoch:FirstConfig")
  if [ -z "${iv_FirstConfig}" ]
  then
  
    # Initialise holiday epoch prefs
    iv_HolidayPrefCount=0
    GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:Holidays"

    # Read holiday config dates and populate holiday epoch prefs
    iv_HolidayCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Holidays")"
    for (( iv_HolidayIndex=0; iv_HolidayIndex<${iv_HolidayCount}; iv_HolidayIndex++ ))
    do
      # ---

      iv_ReferenceEpoch=$(date -j -f "%S:%M:%H:%d:%m:%Y" $(date -u "+0:0:0:01:01:%Y") "+%s")
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "ReferenceEpoch $(date -r ${iv_ReferenceEpoch} "+%S:%M:%H:%d:%m:%Y")"

      bv_UseDefaultValue=${GLB_BC_TRUE}

      iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Holidays:${iv_HolidayIndex}:Start:Day")"
      if [ -z "${iv_UnitValue}" ]
      then
        if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
        then
          iv_UnitValue=1
        fi
      else
        bv_UseDefaultValue=${GLB_BC_FALSE}
      fi
      if [ -n "${iv_UnitValue}" ]
      then
        iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "d" ${iv_UnitValue})
      fi

      iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Holidays:${iv_HolidayIndex}:Start:Month")"
      if [ -z "${iv_UnitValue}" ]
      then
        if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
        then
          iv_UnitValue=1
        fi
      else
        bv_UseDefaultValue=${GLB_BC_FALSE}
      fi
      if [ -n "${iv_UnitValue}" ]
      then
        iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "m" ${iv_UnitValue})
      fi

      iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Holidays:${iv_HolidayIndex}:Start:Year")"
      if [ -n "${iv_UnitValue}" ]
      then
        iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "Y" ${iv_UnitValue})
      fi

      iv_StartEpoch=${iv_ReferenceEpoch}
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "StartEpoch $(date -r ${iv_StartEpoch} "+%S:%M:%H:%d:%m:%Y")"

      # ---
 
      # iv_ReferenceEpoch=$(date -j -f "%S:%M:%H:%d:%m:%Y" $(date -u "+0:0:0:01:01:%Y") "+%s")
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "ReferenceEpoch $(date -r ${iv_ReferenceEpoch} "+%S:%M:%H:%d:%m:%Y")"

      bv_UseDefaultValue=${GLB_BC_TRUE}

      iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Holidays:${iv_HolidayIndex}:End:Day")"
      if [ -z "${iv_UnitValue}" ]
      then
        if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
        then
          iv_UnitValue=1
      fi
        else
        bv_UseDefaultValue=${GLB_BC_FALSE}
      fi
      if [ -n "${iv_UnitValue}" ]
      then
        iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "d" ${iv_UnitValue})
      fi

      iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Holidays:${iv_HolidayIndex}:End:Month")"
      if [ -z "${iv_UnitValue}" ]
      then
        if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
        then
          iv_UnitValue=1
        fi
      else
        bv_UseDefaultValue=${GLB_BC_FALSE}
      fi
      if [ -n "${iv_UnitValue}" ]
      then
        iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "m" ${iv_UnitValue})
      fi

      iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Holidays:${iv_HolidayIndex}:End:Year")"
      if [ -n "${iv_UnitValue}" ]
      then
        iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "Y" ${iv_UnitValue})
      fi

      iv_EndEpoch=${iv_ReferenceEpoch}
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "EndEpoch $(date -r ${iv_EndEpoch} "+%S:%M:%H:%d:%m:%Y")"

      # ---

      if [ ${iv_StartEpoch} -lt ${iv_EndEpoch} ]
      then
        #if [ ${iv_NowEpoch} -lt ${iv_EndEpoch} ]
        #then
          GLB_NF_SETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:Holidays:${iv_HolidayPrefCount}:StartEpoch" ${iv_StartEpoch}
          GLB_NF_SETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:Holidays:${iv_HolidayPrefCount}:EndEpoch" ${iv_EndEpoch}
          iv_HolidayPrefCount=$((${iv_HolidayPrefCount}+1))
        #fi
      fi
    
      # ---

    done
  
    GLB_NF_SETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:Epoch:FirstConfig" ${iv_NowEpoch}
  fi

}

# ---

# Grab lock - we only want one instance of this policy running at any time
if [ $(GLB_BF_NAMEDLOCKGRAB "${GLB_SV_POLICYNAME}") = ${GLB_BC_FALSE} ]
then
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted. Cannot grab lock."
else

# ---

iv_NowEpoch=$(date -u "+%s")

# All time audits are stored under the global tag
sv_GlobalAuditTag="0000-00"

# Current audits are stored under this audit tag
sv_ThisAuditTag=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:AuditTag")
if [ -z "${sv_ThisAuditTag}" ]
then
  sv_ThisAuditTag=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:AuditTag")
  if [ -z "${sv_ThisAuditTag}" ]
  then
    # If no tag defined, use Tag-YearNum-MonthNum - i.e. 2021-09
    sv_ThisAuditTag=$(date -r ${iv_NowEpoch} "+%Y-%m")
  fi
  GLB_NF_SETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:AuditTag" ${sv_ThisAuditTag}
fi

# Prep for audit
nf_FirstConfig
nf_PrepRecords
nf_ConvertRecords

# ---

case ${GLB_SV_EVENTNAME} in
    
Sys-PolicyInstall)
  ;;
  
Sys-Boot)
  iv_TotalCount=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:Total:Count")
  if [ -n "${iv_TotalCount}" ]
  then
  
    iv_TotalInUse=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:Total:InUse")
    if [ -n "${iv_TotalInUse}" ]
    then
      iv_BaseHours="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:WorkingWeek:Hours")"
      if [ -z "${iv_BaseHours}" ]
      then
        iv_BaseHours=0
      fi
      
      iv_BaseMinutes="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:WorkingWeek:Minutes")"
      if [ -z "${iv_BaseMinutes}" ]
      then
        iv_BaseMinutes=0
      fi
      
      iv_BaseSeconds=$(( (${iv_BaseHours}*60 + ${iv_BaseMinutes})*60 ))
      if [ ${iv_BaseSeconds} -eq 0 ]
      then
        # default to 37 hours per week
        iv_BaseSeconds=133200
      fi

      if [ ${iv_TotalCount} -eq 0 ]
      then
        iv_UsePerWeekSecs=0
      else
        iv_UsePerWeekSecs=$(( (604800*${iv_TotalInUse})/${iv_TotalCount} ))
      fi
      
      iv_UsePerWeekMins=$(( ${iv_UsePerWeekSecs}/60 ))
      iv_UsePerWeekHours=$(( ${iv_UsePerWeekMins}/60 ))
      iv_UsePerWeekMins=$(( ${iv_UsePerWeekMins}%60 ))
      iv_UsePercentage=$(( (100*${iv_UsePerWeekSecs})/${iv_BaseSeconds} ))
      
      sv_DisplayText="Avg Use ${iv_UsePercentage}%, ${iv_UsePerWeekHours} hours ${iv_UsePerWeekMins} minutes per week"

      # build the daily use graph
      iv_MaxUse=0
      iv_DayNum=0
      while [ ${iv_DayNum} -lt 7 ]
      do
        iv_InUse=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:Day:InUse:${iv_DayNum}")
        if [ ${iv_InUse} -gt ${iv_MaxUse} ]
        then
          iv_MaxUse=${iv_InUse}
        fi
        iv_DayNum=$((${iv_DayNum}+1))
      done
      
      sv_GraphText="["
      iv_DayNum=0
      while [ ${iv_DayNum} -lt 7 ]
      do
        iv_InUse=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:Day:InUse:${iv_DayNum}")
        iv_UseNum=$(( 3*${iv_InUse}/(${iv_MaxUse}+1) ))
        case ${iv_UseNum} in
    
        0)
          sv_GraphText="${sv_GraphText}."
          ;;
          
        1)
          sv_GraphText="${sv_GraphText}o"
          ;;
          
        2)
          sv_GraphText="${sv_GraphText}O"
          ;;
          
        esac

        iv_DayNum=$((${iv_DayNum}+1))
      done
      sv_GraphText="${sv_GraphText}]"
    
      sv_DisplayText="${sv_DisplayText}, ${sv_GraphText}"
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "${sv_DisplayText}"

      # Only display after we have a weeks worth of audit
      if [ ${iv_TotalCount} -gt 604800 ]
      then
        GLB_NF_SETLOGINWINDOWLINE 3 "${sv_DisplayText}"
      else
        GLB_NF_SETLOGINWINDOWLINE 3 ""
      fi
    fi
  fi
  ;;
  
Sys-Poll)
  iv_NowMonthNum=$(( $(date -r ${iv_NowEpoch} "+%m" | sed "s|^0||") -1 ))
  iv_NowDayNum=$(date -r ${iv_NowEpoch} "+%w")
  iv_NowHourNum=$(date -r ${iv_NowEpoch} "+%H" | sed "s|^0||")

  iv_LastAuditEpoch=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:Epoch:Last")
  iv_AuditInterval=$((${iv_NowEpoch}-${iv_LastAuditEpoch}))

  if [ ${iv_AuditInterval} -lt 0 ]
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - the current system time pre-dates the last audit epoch"

  else
    if [ ${iv_AuditInterval} -lt $((${GLB_IC_SYSPOLLTRIGGERSECS}*3)) ]
    then
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Time since last audit (${iv_AuditInterval}) indicates this is normal usage, as it is within the limits ($((${GLB_IC_SYSPOLLTRIGGERSECS}*3)) secs)"

      # Check that someone is logged in
      if [ "$(stat -f '%Su' /dev/console)" != "root" ]
      then
        iv_SysIdleSecs=$(GLB_IF_SYSTEMIDLESECS)
      
      
        if [ ${iv_SysIdleSecs} -lt $((${GLB_IC_SYSPOLLTRIGGERSECS}*3)) ]
        then
          GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Idle time (${iv_SysIdleSecs}) indicates user session is active, as it is within limits ($((${GLB_IC_SYSPOLLTRIGGERSECS}*3)) secs)"

          nf_UpdateRecord "${sv_GlobalAuditTag}:Total:InUse" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_GlobalAuditTag}:Month:InUse:${iv_NowMonthNum}" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_GlobalAuditTag}:Day:InUse:${iv_NowDayNum}" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_GlobalAuditTag}:Hour:InUse:${iv_NowHourNum}" ${iv_AuditInterval}

          nf_UpdateRecord "${sv_ThisAuditTag}:Total:InUse" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_ThisAuditTag}:Month:InUse:${iv_NowMonthNum}" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_ThisAuditTag}:Day:InUse:${iv_NowDayNum}" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_ThisAuditTag}:Hour:InUse:${iv_NowHourNum}" ${iv_AuditInterval}
       
        else
          GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Idle time (${iv_SysIdleSecs}) indicates user session is idle, as it exceeds the limits ($((${GLB_IC_SYSPOLLTRIGGERSECS}*3)) secs)"

          nf_UpdateRecord "${sv_GlobalAuditTag}:Total:Idle" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_GlobalAuditTag}:Month:Idle:${iv_NowMonthNum}" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_GlobalAuditTag}:Day:Idle:${iv_NowDayNum}" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_GlobalAuditTag}:Hour:Idle:${iv_NowHourNum}" ${iv_AuditInterval}

          nf_UpdateRecord "${sv_ThisAuditTag}:Total:Idle" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_ThisAuditTag}:Month:Idle:${iv_NowMonthNum}" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_ThisAuditTag}:Day:Idle:${iv_NowDayNum}" ${iv_AuditInterval}
          nf_UpdateRecord "${sv_ThisAuditTag}:Hour:Idle:${iv_NowHourNum}" ${iv_AuditInterval}
      
        fi
      else
        GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Excluding session from user audit. User is not logged in."
     fi
    else
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Time since last audit (${iv_AuditInterval}) indicates there has been a break in normal usage, as it exceeds the limits ($((${GLB_IC_SYSPOLLTRIGGERSECS}*3)) secs)"

    fi

    # Adjust audit timings for holidays 

    iv_OrigInterval=${iv_AuditInterval}

    # bugfix for v3.2.12 - typo caused count corruption
    iv_Tot=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:Total:Count")
    if [ ${iv_Tot} -ge 1633824000 ]
    then
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Applying fix for version 3.2.13 bug"
      GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_GlobalAuditTag}:Total:Count" 0
      GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:${sv_ThisAuditTag}:Total:Count" 0
      iv_FirstAuditEpoch=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:Epoch:First")
      if [ -z "${iv_FirstAuditEpoch}" ]
      then
        iv_FirstAuditEpoch=${iv_NowEpoch}
      fi
      iv_OrigInterval=0
      iv_AuditInterval=$(( (${iv_NowEpoch}-${iv_FirstAuditEpoch}) ))
    fi
  
    iv_HolidayPrefCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:Holidays")"

    for (( iv_HolidayPrefIndex=0; iv_HolidayPrefIndex<${iv_HolidayPrefCount}; iv_HolidayPrefIndex++ ))
    do
      iv_StartEpoch="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:Holidays:${iv_HolidayPrefIndex}:StartEpoch")"
      iv_EndEpoch="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:Holidays:${iv_HolidayPrefIndex}:EndEpoch")"

      # GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "iv_NowEpoch ${iv_NowEpoch}, iv_StartEpoch ${iv_StartEpoch}, iv_EndEpoch ${iv_EndEpoch}, "

      if [ ${iv_LastAuditEpoch} -lt ${iv_StartEpoch} ]
      then
        if [ ${iv_NowEpoch} -gt ${iv_StartEpoch} ]
        then
          if [ ${iv_NowEpoch} -gt ${iv_EndEpoch} ]
          then
            iv_AuditInterval=$(( ${iv_AuditInterval}-(${iv_EndEpoch}-${iv_StartEpoch}) ))
            # GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} '$(( ${iv_AuditInterval}-(${iv_EndEpoch}-${iv_StartEpoch}) ))'
          else
            iv_AuditInterval=$(( ${iv_AuditInterval}-(${iv_NowEpoch}-${iv_StartEpoch}) ))
            # GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} '$(( ${iv_AuditInterval}-(${iv_NowEpoch}-${iv_StartEpoch}) ))'
          fi
        fi
      else
        if [ ${iv_LastAuditEpoch} -lt ${iv_EndEpoch} ]
        then
          if [ ${iv_NowEpoch} -gt ${iv_EndEpoch} ]
          then
            iv_AuditInterval=$(( ${iv_AuditInterval}-(${iv_EndEpoch}-${iv_LastAuditEpoch}) ))
            # GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} '$(( ${iv_AuditInterval}-(${iv_EndEpoch}-${iv_LastAuditEpoch}) ))'
          else
            iv_AuditInterval=$(( ${iv_AuditInterval}-(${iv_NowEpoch}-${iv_LastAuditEpoch}) ))
            # GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} '$(( ${iv_AuditInterval}-(${iv_NowEpoch}-${iv_LastAuditEpoch}) ))'
          fi
        fi
      fi

    done  
  
    if [ ${iv_AuditInterval} -lt 0 ]
    then
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Please check holiday definitions for overlapping dates"
      iv_AuditInterval=0
    fi
  
    if [ ${iv_AuditInterval} -ne ${iv_OrigInterval} ]
    then
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Adjusting audit timings (${iv_OrigInterval} to ${iv_AuditInterval}) for holidays"
    fi

    nf_UpdateRecord "${sv_GlobalAuditTag}:Total:Count" ${iv_AuditInterval}
    nf_UpdateRecord "${sv_ThisAuditTag}:Total:Count" ${iv_AuditInterval}

    GLB_NF_SETPLISTPROPERTY "${GLB_SV_SHAREDPREFSFILEPATH}" ":${GLB_SV_POLICYNAME}:Audit:Epoch:Last" ${iv_NowEpoch}
  fi
  ;;
  
Sys-PolicyUninstall)
  # Clear login window line
  GLB_NF_SETLOGINWINDOWLINE 3 ""
  ;;
  
*)
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported."
  ;;

esac

# ---

# Release lock
GLB_NF_NAMEDLOCKRELEASE "${GLB_SV_POLICYNAME}"

fi

# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---
