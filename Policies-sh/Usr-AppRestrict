#!/bin/bash
#
# Short:    App Policy script - Restricts application usage depending on a blacklist or whitelist
# Author:   Mark J Swift
# Version:  3.3.0
# Modified: 22-May-2022
#
# Triggered by the following events:
#   Usr-AppWillLaunch (as user)
#
# Called as follows:    
#   Usr-AppRestrict <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <PolicyPrefsFilePath> <SharedPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>

# ---

if [ "$(whoami)" = "root" ]
then
  exit 0
fi

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GLB_SV_CODEVERSION="3.3.0"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST=""

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.

# ---

if [ "${GLB_BV_CONSOLEUSERISADMIN}" = ${GLB_BC_TRUE} ]
then
  # Exit if the user is an admin
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "Policy aborted - user is an admin."
else

# ---

case ${GLB_SV_EVENTNAME} in
    
Usr-AppWillLaunch)
  # Any Application in the ExceptionList is exempt from Whitelist/BlackList checking
  # This allows you to have Apps that will run from any location without having to implement a whitelist
  # The format is ^ApplicationName1/ApplicationBundleIdentifier1|ApplicationName2/ApplicationBundleIdentifier2|...$
  # If an application has no ApplicationBundleIdentifier then specify ApplicationName/(null) i.e TextWrangler/(null)
  # Regular expressions can be used.

  # Build ExceptionList
  sv_ExceptionList=""

  iv_ObjectCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExceptionList")"
  for (( iv_LoopCount=0; iv_LoopCount<${iv_ObjectCount}; iv_LoopCount++ ))
  do
    sv_ListedAppName="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExceptionList:${iv_LoopCount}:ApplicationName")"
    if test -n "${sv_ListedAppName}"
    then
      sv_ListedAppBundleIdentifier="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExceptionList:${iv_LoopCount}:ApplicationBundleIdentifier")"
      if test -n "${sv_ListedAppBundleIdentifier}"
      then
        sv_ExceptionList="${sv_ExceptionList}|^${sv_ListedAppName}/${sv_ListedAppBundleIdentifier}$"
      fi    
    fi
  done
  sv_ExceptionList=$(echo "${sv_ExceptionList}" | sed "s/^|//")
    
  # If the WhiteList is not null, then these Applications (and only these) are allowed.
  # When the WhiteList is not null, then it should at least contain "Finder/com.apple.Finder" or maybe even ".*/com.apple\..*"
  # Regular expressions can be used.

  # Build WhiteList
  sv_WhiteList=""

  iv_ObjectCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:WhiteList")"
  for (( iv_LoopCount=0; iv_LoopCount<${iv_ObjectCount}; iv_LoopCount++ ))
  do
    sv_ListedAppName="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:WhiteList:${iv_LoopCount}:ApplicationName")"
    if test -n "${sv_ListedAppName}"
    then
      sv_ListedAppBundleIdentifier="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:WhiteList:${iv_LoopCount}:ApplicationBundleIdentifier")"
      if test -n "${sv_ListedAppBundleIdentifier}"
      then
        sv_WhiteList="${sv_WhiteList}|^${sv_ListedAppName}/${sv_ListedAppBundleIdentifier}$"
      fi    
    fi
  done
  sv_WhiteList=$(echo "${sv_WhiteList}" | sed "s/^|//")

  # Any Application in the BlackList is always disallowed for non-admins
  # Regular expressions can be used.

  # Build BlackList
  sv_BlackList=""

  iv_ObjectCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:BlackList")"
  for (( iv_LoopCount=0; iv_LoopCount<${iv_ObjectCount}; iv_LoopCount++ ))
  do
    sv_ListedAppName="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:BlackList:${iv_LoopCount}:ApplicationName")"
    if test -n "${sv_ListedAppName}"
    then
      sv_ListedAppBundleIdentifier="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:BlackList:${iv_LoopCount}:ApplicationBundleIdentifier")"
      if test -n "${sv_ListedAppBundleIdentifier}"
      then
        sv_BlackList="${sv_BlackList}|^${sv_ListedAppName}/${sv_ListedAppBundleIdentifier}$"
      fi    
    fi
  done
  sv_BlackList=$(echo "${sv_BlackList}" | sed "s/^|//")

  # If the path WhiteList is not null, then Applications at the specified paths (and only these paths) are allowed.
  # When the path WhiteList is not null, it should at least contain "^/Applications/.*$|^/System/Library/CoreServices/.*$"
  # ~/ is expanded to the current user home before comparison.
  # Regular expressions should be used.

  # Build PathWhiteList
  sv_PathWhiteList=""

  iv_ObjectCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:PathWhiteList")"
  for (( iv_LoopCount=0; iv_LoopCount<${iv_ObjectCount}; iv_LoopCount++ ))
  do
    sv_ListedAppFilePath="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:PathWhiteList:${iv_LoopCount}")"
    if test -n "${sv_ListedAppFilePath}"
    then
      sv_PathWhiteList="${sv_PathWhiteList}|^${sv_ListedAppFilePath}$"
    fi
  done
  sv_PathWhiteList=$(echo "${sv_PathWhiteList}" | sed "s/^\|//;s|~/|"$(eval echo ~/)"|g")

  # Any application located at a path in the path BlackList is always disallowed for non-admins
  # ~/ is expanded to the current user home before comparison.
  # Regular expressions should be used.

  # Build PathBlackList
  sv_PathBlackList=""

  iv_ObjectCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:PathBlackList")"
  for (( iv_LoopCount=0; iv_LoopCount<${iv_ObjectCount}; iv_LoopCount++ ))
  do
    sv_ListedAppFilePath="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:PathBlackList:${iv_LoopCount}")"
    if test -n "${sv_ListedAppFilePath}"
    then
      sv_PathBlackList="${sv_PathBlackList}|^${sv_ListedAppFilePath}$"
    fi
  done
  sv_PathBlackList=$(echo "${sv_PathBlackList}" | sed "s/^\|//;s|~/|"$(eval echo ~/)"|g")

  # Should we disallow applications running on mounts
  bv_OnlyAllowLocalApps="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:OnlyAllowLocalApps")"

  # Do some simple blacklisting/whitelisting of apps
  
  # Build an Identity for the App from the ApplicationName and the ApplicationBundleIdentifier
  sv_ThisAppFingerprint="${GLB_SV_LAUNCHEDAPPNAME}/${GLB_SV_LAUNCHEDAPPBUNDLEIDENTIFIER}"

  bv_DisallowStatus=${GLB_BC_FALSE}

  if [ -z "${sv_ExceptionList}" -o -z "$(echo "${sv_ThisAppFingerprint}" | grep -E "${sv_ExceptionList}")" ]
  then
    # The ExceptionList is empty -or- the application is not in the ExceptionList
    
    if [ -n "${sv_WhiteList}" -a -z "$(echo "${sv_ThisAppFingerprint}" | grep -E "${sv_WhiteList}")" ]
    then
      # The WhiteList is not empty -and- the application is not in the WhiteList

      bv_DisallowStatus=${GLB_BC_TRUE}
      sv_DisallowMessage="RESTRICTED APPLICATION. ${GLB_SV_LAUNCHEDAPPNAME} is not in the list of allowed Applications."

    else
      if [ -n "${sv_BlackList}" -a -n "$(echo "${sv_ThisAppFingerprint}" | grep -E "${sv_BlackList}")" ]
      then
        # The BlackList is not empty -and- the application is in the BlackList

        bv_DisallowStatus=${GLB_BC_TRUE}
        sv_DisallowMessage="RESTRICTED APPLICATION. ${GLB_SV_LAUNCHEDAPPNAME} can only be run by the administrator."
  
      else
        if [ -n "${sv_PathWhiteList}" -a -z "$(echo "${GLB_SV_LAUNCHEDAPPFILEPATH}" | grep -E "${sv_PathWhiteList}")" ]
        then
          # The PathWhiteList is not empty -and- the application path is not in the PathWhiteList

          bv_DisallowStatus=${GLB_BC_TRUE}
          sv_DisallowMessage="UNKNOWN PATH. Applications in $(dirname "${GLB_SV_LAUNCHEDAPPFILEPATH}")/ are disallowed"
    
        else
          if [ -n "${sv_PathBlackList}" -a -n "$(echo "${GLB_SV_LAUNCHEDAPPFILEPATH}" | grep -E "${sv_PathBlackList}")" ]
          then
            # The PathBlackList is not empty -and- the application path is in the PathBlackList
    
            bv_DisallowStatus=${GLB_BC_TRUE}
            sv_DisallowMessage="RESTRICTED PATH. Applications in $(dirname "${GLB_SV_LAUNCHEDAPPFILEPATH}")/ are disallowed."
    
          else
            # Should we disallow applications running from mount points?

            if [ "${bv_OnlyAllowLocalApps}" = ${GLB_BC_TRUE} ]
            then
              # Check ApplicationPath against the system mount points
              while read sv_MountPoint
              do
                if test -n "$(echo "${GLB_SV_LAUNCHEDAPPFILEPATH}" | grep -E "^${sv_MountPoint}/")"
                then
                  bv_DisallowStatus=${GLB_BC_TRUE}
                  sv_DisallowMessage="RESTRICTED LOCATION. Applications can only be run from the internal hard drive."
                  break
                fi
              done < <(mount | sed -E 's/^.* on //;s/ \([^(]*\)$//' | grep -v '^/$')
            fi

          fi
        fi
      fi
    fi
  fi
  
  # - Should we kill the app? -
  
  if [ "${bv_DisallowStatus}" = ${GLB_BC_FALSE} ]
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "The application '${sv_ThisAppFingerprint}' is not restricted"

  else
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Killing restricted application '${GLB_IV_LAUNCHEDAPPPROCESSID}'"
    kill ${GLB_IV_LAUNCHEDAPPPROCESSID}
    GLB_NF_SHOWNOTIFICATION ${GLB_IC_MSGLEVELNOTICE} "${sv_DisallowMessage}"

  fi
  ;;

Usr-PolicyInstall|Usr-PolicyUninstall)
  # Do nothing
  ;;
  
*)
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported."
  ;;

esac
  
# ---

fi

# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---
