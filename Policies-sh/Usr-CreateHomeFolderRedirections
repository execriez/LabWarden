#!/bin/bash
#
# Short:    Usr Policy script - Home folder redirection
# Author:   Mark J Swift
# Version:  3.2.17
# Modified: 22-Nov-2021
#
# Triggered by the following events:
#   Usr-AtDesktop   (as user)
#
# Called as follows:    
#   Usr-CreateHomeFolderRedirections <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <PolicyPrefsFilePath> <SharedPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>

# ---

if [ "$(whoami)" = "root" ]
then
  exit 0
fi

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GLB_SV_CODEVERSION="3.2.17"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST=""

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.
# Look at '/inc-sh/Common.sh' for a complete list.

# ---

nf_ReloadFinder() # Reload the Finder
{
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Reloading the Finder" 
  pkill -U ${GLB_SV_RUNUSERNAME} Finder
}

# ---

# Exit if user is a local account
if [ "${GLB_BV_CONSOLEUSERISLOCAL}" = ${GLB_BC_TRUE} ]
then
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO}  "Policy aborted - User account is local."
else
  if [ "${GLB_BV_CONSOLEUSERHOMEISLOCAL}" = ${GLB_BC_FALSE} ]
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - User home is on network."
  else
    # Grab  lock
    if [ $(GLB_BF_NAMEDLOCKGRAB "FolderRedir") = ${GLB_BC_FALSE} ]
    then
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Cannot grab lock."
    else
  
# ---

case ${GLB_SV_EVENTNAME} in
    
Usr-PolicyInstall|Usr-PolicyUninstall)
  ;;
  
Usr-AtDesktop|Usr-Poll|Usr-ManualTrigger)

  bv_RebuildDockAndSidebar=${GLB_BC_FALSE}
  bv_ReloadFinder=${GLB_BC_FALSE}

  # Changed my mind again on naming this folder
  if test -e "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}/NETWORKSHARES"
  then
    mv "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}/NETWORKSHARES" "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}/NetworkMounts"
  fi

  if [ -n "${GLB_SV_CONSOLEUSERSHAREURI}" ]
  then
    # Mount the network home root somewhere accessible
    sv_ReqdLinkFilePath="/NetworkMounts/USERHOME"

    if [ -n "$(mount | grep -i " on ${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}")" ]
    then
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "A redirect already exists for folder '${sv_ReqdLinkFilePath}'."
          
    else
      GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Creating redirect for folder '${sv_ReqdLinkFilePath}'."

      bv_RebuildDockAndSidebar=${GLB_BC_TRUE}
          
      # If the local directory is a link - delete it
      if [ -L "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}" ]
      then
        rm -f "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}"
      fi

      # Make sure the local directory exists
      mkdir -p "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}"

      # Mount network folder at path and remount if already mounted somewhere else
      GLB_BF_MOUNTURIATPATH "${GLB_SV_CONSOLEUSERSHAREURI}/" "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}" ${GLB_BC_TRUE}

    fi
  fi

  # Mount the home sub-folders
  iv_ObjectCount="$(GLB_IF_GETPLISTARRAYSIZE "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Path")"
  for (( iv_LoopCount=0; iv_LoopCount<${iv_ObjectCount}; iv_LoopCount++ ))
  do
    sv_ReqdLinkEntry="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Path:${iv_LoopCount}")"
    sv_ReqdLinkEntry=$(echo "/${sv_ReqdLinkEntry}" | sed "s|/[/]*|/|g")
    sv_ReqdLinkFilePath=$(echo "${sv_ReqdLinkEntry}" | sed "s|/$||")
    if test -n "${sv_ReqdLinkFilePath}"
    then
      if [ -n "$(mount | grep -i " on ${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}")" ]
      then
        GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELINFO} "A redirect already exists for folder '${sv_ReqdLinkFilePath}'."
          
      else
        GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Creating redirect for folder '${sv_ReqdLinkFilePath}'."

        bv_RebuildDockAndSidebar=${GLB_BC_TRUE}
          
        # If the local directory is a link - delete it
        if [ -L "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}" ]
        then
            rm -f "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}"
        fi

        # Make sure the local directory exists
        mkdir -p "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}"

        # Make sure the remote directory exists
        mkdir -p "${GLB_SV_CONSOLEUSERSHAREDIRPATH}${sv_ReqdLinkFilePath}"
      
        # Mount network folder at path and remount if already mounted somewhere else
        GLB_BF_MOUNTURIATPATH "${GLB_SV_CONSOLEUSERSHAREURI}${sv_ReqdLinkFilePath}/" "${GLB_SV_CONSOLEUSERLOCALHOMEDIRPATH}${sv_ReqdLinkFilePath}" ${GLB_BC_TRUE}

        if [ "${sv_ReqdLinkFilePath}" = "/Desktop" ]
        then
          bv_ReloadFinder=${GLB_BC_TRUE}
        fi
      fi
    fi
  
  done

  # Existing shortcuts in the dock & siebar may have changed. Finder may need reloading too if the desktop has been redirected.
  if [ "${bv_RebuildDockAndSidebar}" = ${GLB_BC_TRUE} ]
  then
    "${GLB_SV_PROJECTDIRPATH}"/bin/SetupDock &
    "${GLB_SV_PROJECTDIRPATH}"/bin/SetupSidebar &
  fi

  # Check if the Desktop was linked
  if [ "${bv_ReloadFinder}" = ${GLB_BC_TRUE} ]
  then
    # Kill the Finder (Refreshes Desktop)
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Desktop folder redirected - Finder needs to be reloaded."
    nf_ReloadFinder
  fi

  ;;

*)
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported."
  ;;

esac
  
# ---

      # Release lock
      GLB_NF_NAMEDLOCKRELEASE "FolderRedir"
    fi
  fi
fi

# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---
