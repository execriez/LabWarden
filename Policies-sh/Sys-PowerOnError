#!/bin/bash
#
# Short:    Sys Policy script - Schedules a power on if a LabWarden Error occurs 
# Author:   Mark J Swift
# Version:  3.3.0
# Modified: 22-May-2022
#
# Triggered by the following events:
#   Sys-Error       (as root)
#   Sys-Alert       (as root)
#   Sys-Critical    (as root)
#
# Called as follows:    
#   Sys-PowerOnError <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <PolicyPrefsFilePath> <SharedPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>

# ---

if [ "$(whoami)" != "root" ]
then
  exit 0
fi

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GLB_SV_CODEVERSION="3.3.0"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST=""

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.

# ---

# Return the next epoch that matches with the given unit value
if_NextUnitValueEpoch()   # ReferenceEpoch, Unit (i.e. S, M, H, d, m or Y), Value
{
  local iv_ReferenceEpoch
  local sv_Unit
  local iv_Value
  local sv_NewDateString
  local iv_NewEpoch
  local sv_NextUnit
  
  iv_ReferenceEpoch=${1}
  sv_Unit=${2}
  iv_Value=${3}
  
  sv_NewDateString=$(echo "%S:%M:%H:%d:%m:%Y" | sed "s|%"${sv_Unit}"|"${iv_Value}"|")
  iv_NewEpoch=$(date -j -f "%S:%M:%H:%d:%m:%Y" $(date -r ${iv_ReferenceEpoch} "+"${sv_NewDateString}) "+%s")
  
  if [ ${iv_NewEpoch} -ge ${iv_ReferenceEpoch} ]
  then
    iv_ReferenceEpoch=${iv_NewEpoch}
  else
    sv_NextUnit=$(echo "SMHdmy" | tr "${sv_Unit}" "\n" | tail -n1 | cut -c1)
    if [ -n "${sv_NextUnit}" ]
    then
      iv_ReferenceEpoch=$(date -j -r ${iv_NewEpoch} -v +1${sv_NextUnit} +%s)
    fi
  fi

  echo "${iv_ReferenceEpoch}"
}

# ---

# Grab lock - we only want one instance of this policy running at any time
if [ $(GLB_BF_NAMEDLOCKGRAB "${GLB_SV_POLICYNAME}" 0 ${GLB_BC_TRUE}) = ${GLB_BC_FALSE} ]
then
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted. Policy already active by another trigger."
  
else

# ---

case ${GLB_SV_EVENTNAME} in
    
Sys-PolicyInstall)
  ;;

Sys-PolicyUninstall)
  GLB_NF_SCHEDULECANCEL "${GLB_SV_CONFIGUUID}" "poweron"
  GLB_SF_DELETEPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:ScheduledEpoch"
  ;;
  
Sys-Error|Sys-Alert|Sys-Critical)
  iv_ReferenceEpoch=$(date -u "+%s")

  iv_ScheduledEpoch=$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:ScheduledEpoch")
  if test -z "${iv_ScheduledEpoch}"
  then
    iv_ScheduledEpoch=0
  fi

  if [ ${iv_ScheduledEpoch} -lt ${iv_ReferenceEpoch} ]
  then
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "ReferenceEpoch $(date -r ${iv_ReferenceEpoch} "+%S:%M:%H:%d:%m:%Y")"

    bv_UseDefaultValue=${GLB_BC_TRUE}

    iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Start:Second")"
    if [ -z "${iv_UnitValue}" ]
    then
      if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
      then
        iv_UnitValue=0
      fi
    else
      bv_UseDefaultValue=${GLB_BC_FALSE}
    fi
    if [ -n "${iv_UnitValue}" ]
    then
      iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "S" ${iv_UnitValue})
    fi

    iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Start:Minute")"
    if [ -z "${iv_UnitValue}" ]
    then
      if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
      then
        iv_UnitValue=0
      fi
    else
      bv_UseDefaultValue=${GLB_BC_FALSE}
    fi
    if [ -n "${iv_UnitValue}" ]
    then
      iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "M" ${iv_UnitValue})
    fi

    iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Start:Hour")"
    if [ -z "${iv_UnitValue}" ]
    then
      if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
      then
        iv_UnitValue=0
      fi
    else
      bv_UseDefaultValue=${GLB_BC_FALSE}
    fi
    if [ -n "${iv_UnitValue}" ]
    then
      iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "H" ${iv_UnitValue})
    fi

    iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Start:Day")"
    if [ -z "${iv_UnitValue}" ]
    then
      if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
      then
        iv_UnitValue=1
      fi
    else
      bv_UseDefaultValue=${GLB_BC_FALSE}
    fi
    if [ -n "${iv_UnitValue}" ]
    then
      iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "d" ${iv_UnitValue})
    fi

    iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Start:Month")"
    if [ -z "${iv_UnitValue}" ]
    then
      if [ "${bv_UseDefaultValue}" = "${GLB_BC_TRUE}" ]
      then
        iv_UnitValue=1
      fi
    else
      bv_UseDefaultValue=${GLB_BC_FALSE}
    fi
    if [ -n "${iv_UnitValue}" ]
    then
      iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "m" ${iv_UnitValue})
    fi

    iv_UnitValue="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:Start:Year")"
    if [ -n "${iv_UnitValue}" ]
    then
      iv_ReferenceEpoch=$(if_NextUnitValueEpoch ${iv_ReferenceEpoch} "y" ${iv_UnitValue})
    fi

    iv_StartEpoch=${iv_ReferenceEpoch}
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "StartEpoch $(date -r ${iv_StartEpoch} "+%S:%M:%H:%d:%m:%Y")"

    iv_ReferenceEpoch=$(date -j -r ${iv_StartEpoch} -v +10M +%s)

    iv_EndEpoch=${iv_ReferenceEpoch}
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "EndEpoch $(date -r ${iv_EndEpoch} "+%S:%M:%H:%d:%m:%Y")"

    iv_ScheduledEpoch=$(jot -r 1 ${iv_StartEpoch} ${iv_EndEpoch})
    GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "ScheduledEpoch $(date -r ${iv_ScheduledEpoch} "+%S:%M:%H:%d:%m:%Y")"

    GLB_NF_SETPLISTPROPERTY "${GLB_SV_POLICYPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:Prefs:ScheduledEpoch" "${iv_ScheduledEpoch}"
    GLB_NF_SCHEDULE4EPOCH "${GLB_SV_CONFIGUUID}" "poweron" ${iv_ScheduledEpoch}
  fi

  ;;
  
*)
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELWARN} "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported."
  ;;

esac
  
# ---

# Release lock
GLB_NF_NAMEDLOCKRELEASE "${GLB_SV_POLICYNAME}"

fi

# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---
