#!/bin/bash
#
# Short:    Sys Policy script - Add entries to the /etc/hosts file
# Author:   Mark J Swift
# Version:  2.0.10
# Modified: 12-Jun-2017
#
# Triggered by the following events:
#   Sys-Boot (as root)
#
# Called as follows:    
#   Sys-AddEntriesToHostsFile <ConfigFilePath> <ConfigEntryName> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

sv_CodeVersion="2.0.10"

if [ $# -eq 0 ]
then
  echo "${sv_CodeVersion}"
  exit 0
fi

# ---

# Get the config file path
sv_ConfigFilePath="${1}"
if test -z "${sv_ConfigFilePath}"
then
  # We need something to work with
  exit 0
fi

# Get config entry name. This is the entry in the config that holds the configurable parameters for this policy.
sv_ConfigEntryName="${2}"

# Get event History
sv_EventHistory="${3}"

# Calculate the event that triggered this policy.
sv_EventName="$(echo ${sv_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${sv_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get the name of the logged in user, a null string signifies no-one is logged in
GLB_sv_LoggedInUserName="${4}"

# Get optional parameter
# This is a general variable that is currently used to pass the following info:
#   Application info during a AppWillLaunch, AppDidLaunch or AppDidTerminate event.
#   User info during a Sys-ConsoleUserLoggedIn, Sys-ConsoleUserLoggedOut, Sys-ConsoleUserSwitch, Sys-Login or Sys-Logout event.
sv_OptionalParam="${5}"

# Get info from optional parameter
case ${sv_EventName} in

Sys-ConsoleUserLoggedIn|Sys-ConsoleUserLoggedOut|Sys-ConsoleUserSwitch|Sys-Login|Sys-Logout)
  GLB_sv_LoggedInUserName="${sv_OptionalParam}"
  ;;
  
esac

# ---

# Load the library, only if it is not already loaded
if test -z "${GLB_sv_ProjectSignature}"
then
  . /usr/local/LabWarden/inc/Common.sh
fi

# By the time we get here, quite a few global variables have been set up.
# Look at 'CommonLib' for a complete list.

# ---

# Get policy name (Name of this script)
sv_PolicyName="${GLB_sv_ThisScriptName}"

# ---

# Calculate the pref file paths

# Local prefs are referenced by Policy UUID and are local to the running user. These are deleted when the policy is updated or uninstalled.
sv_ThisUserLocalPrefFilePath="${GLB_sv_ThisUserPrefDirPath}/${sv_ConfigEntryName}.plist"

# Global prefs are referenced by Policy Name and are read/write root but read-only for normal users. These survive policy updates and uninstalls.
sv_ThisPolicyGlobalPrefFilePath="${GLB_sv_ProjectConfigDirPath}/Config/Global/${sv_PolicyName}.plist"

# ---

# Usr-PolicyInstall & Usr-PolicyUninstall events (which are called as a normal user) are ignored by system policies

if [ "${sv_EventName}" = "Usr-PolicyInstall" ] || [ "${sv_EventName}" = "Usr-PolicyUninstall" ]
then
  GLB_nf_logmessage ${GLB_iv_MsgLevelDebug} "Event '${sv_EventHistory}' ignored by policy '${sv_PolicyName}'"
  exit 0
fi

# ---

# Execute the Policy

# Take a note of the Policy call
GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Policy '${sv_PolicyName}' ${sv_OptionalParam} triggered by event '${sv_EventHistory}' as user '${GLB_sv_ThisUserName}'"

# ---

# Exit if we are not root
if [ "${GLB_sv_ThisUserName}" != "root" ]
then
  GLB_nf_QuickExit "Policy aborted - User '${GLB_sv_ThisUserName}' is not supported by policy '${sv_PolicyName}'"
fi

# ---

case ${sv_EventName} in
    
Sys-PolicyUninstall)
  if test -n "$(cat /etc/hosts | grep -i "${sv_PolicyName}")"
  then
    cat /etc/hosts | sed -e "/${sv_ConfigEntryName}-BEGIN/,/${sv_ConfigEntryName}-END/d" > "${GLB_sv_ThisScriptTempDirPath}/hosts"
    cp "${GLB_sv_ThisScriptTempDirPath}/hosts" /etc/hosts
    GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Old entries removed from hosts file."
  fi

  # Remove version 1 entries
  if test -n "$(cat /etc/hosts | grep -i "SystemAddToHosts")"
  then
    cat /etc/hosts | sed -e '/SystemAddToHosts-BEGIN/,/SystemAddToHosts-END/d' > "${GLB_sv_ThisScriptTempDirPath}/hosts"
    cp "${GLB_sv_ThisScriptTempDirPath}/hosts" /etc/hosts
    GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Legacy entries removed from hosts file."
  fi
  ;;
  
Sys-Boot|Sys-PolicyInstall)
  if test -z "$(cat /etc/hosts | grep -i "${sv_PolicyName}")"
  then
    echo "# ${sv_PolicyName}-BEGIN" > "${GLB_sv_ThisScriptTempDirPath}/hosts"
  
    # Build a file of entries to add to /etc/hosts
    iv_EntryCount="$(GLB_if_GetPlistArraySize "${sv_ConfigFilePath}" ":${sv_ConfigEntryName}:Config:Entry")"
    
    for (( iv_LoopCount1=0; iv_LoopCount1<${iv_EntryCount}; iv_LoopCount1++ ))
    do
      sv_EntryIP4="$(GLB_sf_GetPlistProperty "${sv_ConfigFilePath}" ":${sv_ConfigEntryName}:Config:Entry:${iv_LoopCount1}:IP4")"
      if test -n "${sv_EntryIP4}"
      then
        sv_HostList=""
      
        sv_HostCount="$(GLB_if_GetPlistArraySize "${sv_ConfigFilePath}" ":${sv_ConfigEntryName}:Config:Entry:${iv_LoopCount1}:Host")"
        for (( iv_LoopCount2=0; iv_LoopCount2<${sv_HostCount}; iv_LoopCount2++ ))
        do
          sv_Host="$(GLB_sf_GetPlistProperty "${sv_ConfigFilePath}" ":${sv_ConfigEntryName}:Config:Entry:${iv_LoopCount1}:Host:${iv_LoopCount2}")"
          if test -n "${sv_Host}"
          then
            if test -n "${sv_HostList}"
            then
              sv_HostList="${sv_HostList} "
            fi
            sv_HostList="${sv_HostList}${sv_Host}"
          fi
        done

        if test -n "${sv_HostList}"
        then
          printf "${sv_EntryIP4}\t${sv_HostList}\n" >> "${GLB_sv_ThisScriptTempDirPath}/hosts"
        fi
      
      fi
    done

    echo "# ${sv_PolicyName}-END" >> "${GLB_sv_ThisScriptTempDirPath}/hosts"

    if [ ${iv_EntryCount} -gt 0 ]
    then
      cat "${GLB_sv_ThisScriptTempDirPath}/hosts" >> /etc/hosts
      GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Entries added to hosts file."
  
    else
      GLB_nf_logmessage ${GLB_iv_MsgLevelWarn} "Config empty"
    
    fi
  fi
  ;;

*)
  GLB_nf_QuickExit "Policy aborted - Trigger '${sv_EventName}' is not supported by policy '${sv_PolicyName}'"
  ;;

esac

# ---

# Take a note that the Policy is complete
GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Policy done."

# Trigger an event
#/usr/local/LabWarden/lib/Trigger "${sv_EventHistory}:${sv_PolicyName}" "$(whoami)" "${sv_OptionalParam}"

# Remove temporary files
rm -fPR "${GLB_sv_ThisScriptTempDirPath}"

# ---
