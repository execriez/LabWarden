#!/bin/bash
#
# Short:    Policy script - Disable Spotlight on a users network home
# Author:   Mark J Swift
# Version:  1.0.98
# Modified: 11-Oct-2016
#
# Triggered by the following events:
#   UserAtDesktop (as user)
#
# Called as follows:    
#   UserNoSpotlightOnNetHome <ConfigDir> <EventHistory> <LoggedInUser> <ConfigEntryName> <OptionalParam>

# ---

sv_CodeVersion="1.0.98"

if [ $# -eq 0 ]
then
  echo "${sv_CodeVersion}"
  exit 0
fi

# ---

# Get the config directory
sv_ConfigDirPath="${1}"
if test -z "${sv_ConfigDirPath}"
then
  # We need something to work with
  exit 0
fi

# Get event History
sv_EventHistory="${2}"

# Get event that triggered this policy
sv_EventName="$(echo ${sv_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${sv_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get the name of the logged in user, a null string signifies no-one is logged in
# This is generally null during a system event, and not null during a user event
LW_sv_LoggedInUserName="${3}"

# Get config entry name. This is the entry in the config that holds the configurable parameters for this policy.
sv_ConfigEntryName="${4}"

# Get optional parameter
# So far, this is only ever used to get Application info after a AppWillLaunch, AppDidLaunch or AppDidTerminate event.
sv_OptionalParam="${5}"

# ---

# Load the library, only if it is not already loaded
if test -z "${LW_sv_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Name of this script)
sv_PolicyName="${LW_sv_ThisScriptName}"

# ---

# Execute the Policy

# Take a note of the Policy call
LW_nf_logmessage "NOTE, policy triggered: '${sv_PolicyName}' ${sv_OptionalParam} triggered by event '${sv_EventHistory}' as user '${LW_sv_ThisUserName}' "

if test -z "${LW_sv_LoggedInUserName}"
then
  LW_nf_QuickExit "NOTE, policy aborted: No-one is logged in."
  
else    
  if [ "${LW_bv_LoggedInUserIsLocal}" = "true" ]
  then
    LW_nf_QuickExit "NOTE, policy aborted: User account is local."
    
  else
    # We are a network account
    
    if [ -z "${LW_sv_LoggedInUserHomeNetworkDirPath}" ]
    then
      LW_nf_QuickExit "NOTE, policy aborted: Network home is unavailable."

    else
      # The original home network share is mounted and available

      if [ ! -e "${LW_sv_LoggedInUserHomeNetworkDirPath}" ]
      then
        LW_nf_QuickExit "NOTE, policy aborted: Network home unavailable."
        
      else
        # The original home network folder exists and is available
    
        if [ -e "${LW_sv_LoggedInUserHomeNetworkDirPath}/.metadata_never_index" ]
        then
          LW_nf_QuickExit "NOTE, policy aborted: Spotlight already disabled."

        else
          LW_nf_logmessage "ATTENTION, disabling Spotlight on network home."
  
          # tell the system never to index the folder
          touch "${LW_sv_LoggedInUserHomeNetworkDirPath}/.metadata_never_index"

          # switch off spotlight for folder
          mdutil -i off "${LW_sv_LoggedInUserHomeNetworkDirPath}"
        fi
    
        if [ -d "${LW_sv_LoggedInUserHomeNetworkDirPath}/.Spotlight-V100" ]
        then
          # remove redundant indexing data
          rm -fR "${LW_sv_LoggedInUserHomeNetworkDirPath}/.Spotlight-V100"
        fi

      fi
    fi
  fi

fi

# Trigger an event
LW_nf_TriggerEvent "${sv_EventHistory}" "${sv_PolicyName}" "${sv_OptionalParam}"

# Remove temporary files
rm -fPR "${LW_sv_ThisScriptTempDirPath}"

# ---
