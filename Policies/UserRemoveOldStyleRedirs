#!/bin/bash
#
# Short:    Policy script - Remove any OLD-style folder redirections
# Author:   Mark J Swift
# Version:  1.0.82
# Modified: 27-May-2016
#
# Triggered by the following events:
#   UserLogin (as user)
#
# Called as follows:    
#   UserRemoveOldStyleRedirs <ConfigDir> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

LCL_ScriptVersion="1.0.82"

if [ $# -eq 0 ]
then
  echo "${LCL_ScriptVersion}"
  exit 0
fi

# ---

# Take a note when this script started
LCL_MyStartEpoch=$(date -u "+%s")

# Get the config directory
LCL_ConfigDir="${1}"
if test -z "${LCL_ConfigDir}"
then
  # We need something to work with
  exit 0
fi

# Get event History
LCL_EventHistory="${2}"

# Get event that triggered this policy
LCL_EventName="$(echo ${LCL_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${LCL_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get optional user
GLB_LoggedInUserName="${3}"

# Get optional parameter
LCL_OptionalParam="${4}"

# ---

# Load the library, only if it is not already loaded
if test -z "${GLB_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Filename of this script)
LCL_PolicyName="${GLB_ThisScriptName}"

# ---

# Execute the Policy

# Take a note of the Policy call
f_logmessage "NOTE, policy triggered: '${LCL_PolicyName}' ${LCL_OptionalParam} triggered by event '${LCL_EventHistory}' as user '${GLB_ThisUserName}' "

if test -z "${GLB_LoggedInUserName}"
then
  f_QuickExit "NOTE, policy aborted: No-one is logged in."
  
else    
  if [ ! -e "${GLB_LoggedInUserHomeDir}" ]
  then
    f_QuickExit "NOTE, policy aborted: Home folder doesn't exist."
    
  else
    # User home exists and is available
    GLB_PolicyExecuted="false"
    
    # Check if OLD-style folder redirections are in place (which may have been left when upgrading scripts)
    LCL_NewFileRedirectList="${GLB_LoggedInUserHomeDir}/.LabWarden/FolderRedir.txt"

    LCL_OldFileRedirectList="${GLB_LoggedInUserHomeDir}/.FileRedirectionList.txt"
    if test -f "${LCL_OldFileRedirectList}"
    then
      # Merge the OLD-style folder redirection list into the new redirection list so they are re-used or removed
      f_logmessage "NOTE, merging the OLD-style 1 folder redirection list into the new redirection."
      if test -f "${LCL_NewFileRedirectList}"
      then
        cat "${LCL_NewFileRedirectList}" >> "${LCL_OldFileRedirectList}"
      fi
      cat "${LCL_OldFileRedirectList}" | sort -u > "${LCL_NewFileRedirectList}"
      echo rm -f "${LCL_OldFileRedirectList}"
      rm -f "${LCL_OldFileRedirectList}"
      GLB_PolicyExecuted="true"
    fi

    LCL_OldFileRedirectList="${GLB_LoggedInUserHomeDir}/.LabWarden/loginwarden/FolderRedir/FileRedirectList.txt"
    if test -f "${LCL_OldFileRedirectList}"
    then
      # Merge the OLD-style folder redirection list into the new redirection list so they are re-used or removed
      f_logmessage "NOTE, merging the OLD-style 2 folder redirection list into the new redirection."
      if test -f "${LCL_NewFileRedirectList}"
      then
        cat "${LCL_NewFileRedirectList}" >> "${LCL_OldFileRedirectList}"
      fi
      cat "${LCL_OldFileRedirectList}" | sort -u > "${LCL_NewFileRedirectList}"
      echo rm -f "${LCL_OldFileRedirectList}"
      rm -f "${LCL_OldFileRedirectList}"
      GLB_PolicyExecuted="true"
    fi

    if test -L "${GLB_LoggedInUserHomeDir}/_Network_Home"
    then
      rm -f "${GLB_LoggedInUserHomeDir}/_Network_Home"
      GLB_PolicyExecuted="true"
    fi
          
    if [ "${GLB_PolicyExecuted}" = "true" ]
    then
      f_logmessage "ATTENTION, OLD-style folder redirection removed"
    
    else
      f_QuickExit "NOTE, policy aborted: There are no old style file redirection lists"
      
    fi

  fi

fi
  
# Trigger an event
f_TriggerEvent "${LCL_EventHistory}" "${LCL_PolicyName}" "${LCL_OptionalParam}"

# Remove temporary files
rm -fR "${GLB_ThisScriptTempDir}"

# ---
