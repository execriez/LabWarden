#!/bin/bash
#
# Short:    Policy script - Fix for when a users Login password does not match the keychain password
# Author:   Mark J Swift
# Version:  1.0.101
# Modified: 09-Dec-2016
#
# Triggered by the following events:
#   UserAtDesktop (as user)
#
# Called as follows:    
#   UserKeychainFix <ConfigDir> <EventHistory> <LoggedInUser> <ConfigEntryName> <OptionalParam>

# ---

sv_CodeVersion="1.0.101"

if [ $# -eq 0 ]
then
  echo "${sv_CodeVersion}"
  exit 0
fi

# ---

# Get the config directory
sv_ConfigDirPath="${1}"
if test -z "${sv_ConfigDirPath}"
then
  # We need something to work with
  exit 0
fi

# Get event History
sv_EventHistory="${2}"

# Get event that triggered this policy
sv_EventName="$(echo ${sv_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${sv_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get the name of the logged in user, a null string signifies no-one is logged in
# This is generally null during a system event, and not null during a user event
LW_sv_LoggedInUserName="${3}"

# Get config entry name. This is the entry in the config that holds the configurable parameters for this policy.
sv_ConfigEntryName="${4}"

# Get optional parameter
# So far, this is only ever used to get Application info after a AppWillLaunch, AppDidLaunch or AppDidTerminate event.
sv_OptionalParam="${5}"

# ---

# Load the library, only if it is not already loaded
if test -z "${LW_sv_BuildVersionStampAsString}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Name of this script)
sv_PolicyName="${LW_sv_ThisScriptName}"

# ---

# Execute the Policy

# Take a note of the Policy call
LW_nf_logmessage "NOTE, policy triggered: '${sv_PolicyName}' ${sv_OptionalParam} triggered by event '${sv_EventHistory}' as user '${LW_sv_ThisUserName}' "

if test -z "${LW_sv_LoggedInUserName}"
then
  LW_nf_QuickExit "NOTE, policy aborted: No-one is logged in."
  
else    
  if [ ! -e "${LW_sv_LoggedInUserHomeDirPath}" ]
  then
    LW_nf_QuickExit "NOTE, policy aborted: Home folder doesn't exist."
    
  else
    # User home exists and is available
    
    # Fix for if you hit "Continue Log In" when you are asked to update your keychain password.
    # (When your Login password does not match your keychain password)

    # Needs to be done UserAtDesktop, because the keychain isn't unlocked until after login

    # Check if Keychain is unlocked.
    if test -z "$(security 2>&1 unlock-keychain -p "" "${LW_sv_LoggedInUserHomeDirPath}/Library/Keychains/login.keychain")"
    then
      LW_nf_QuickExit "NOTE, policy aborted: Keychain is fine."
    
    else
      LW_nf_logmessage "ATTENTION, deleting keychain."

      LW_nf_ShowNotification "CREATING NEW KEYCHAIN" "The system is logging you off. Please login again."
  
      # Keychain will not unlock, so delete known keychains and hope for the best
      # Not ideal really.
      rm -fR "${LW_sv_LoggedInUserHomeDirPath}/Library/Keychains"

      # applescript to log out gracefully
      /usr/bin/osascript -e 'tell application "loginwindow" to «event aevtrlgo»'

    fi
  fi

fi
  
# Trigger an event
LW_nf_TriggerEvent "${sv_EventHistory}" "${sv_PolicyName}" "${sv_OptionalParam}"

# Remove temporary files
rm -fPR "${LW_sv_ThisScriptTempDirPath}"

# ---
