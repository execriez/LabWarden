#!/bin/bash
#
# Short:    Policy script - Create user folders at User Login
# Author:   Mark J Swift
# Version:  1.0.82
# Modified: 27-May-2016
#
# Triggered by the following events:
#   UserLogin (as user)
#
# Called as follows:    
#   UserCreateFolder <ConfigDir> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

LCL_ScriptVersion="1.0.82"

if [ $# -eq 0 ]
then
  echo "${LCL_ScriptVersion}"
  exit 0
fi

# ---

# Take a note when this script started
LCL_MyStartEpoch=$(date -u "+%s")

# Get the config directory
LCL_ConfigDir="${1}"
if test -z "${LCL_ConfigDir}"
then
  # We need something to work with
  exit 0
fi

# Get event History
LCL_EventHistory="${2}"

# Get event that triggered this policy
LCL_EventName="$(echo ${LCL_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${LCL_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get optional user
GLB_LoggedInUserName="${3}"

# Get optional parameter
LCL_OptionalParam="${4}"

# ---

# Load the library, only if it is not already loaded
if test -z "${GLB_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Filename of this script)
LCL_PolicyName="${GLB_ThisScriptName}"

# ---

# Execute the Policy

# Take a note of the Policy call
f_logmessage "NOTE, policy triggered: '${LCL_PolicyName}' ${LCL_OptionalParam} triggered by event '${LCL_EventHistory}' as user '${GLB_ThisUserName}' "

if test -z "${GLB_LoggedInUserName}"
then
  f_QuickExit "NOTE, policy aborted: No-one is logged in."
  
else
  if [ ! -e "${GLB_LoggedInUserHomeDir}" ]
  then
    f_QuickExit "NOTE, policy aborted: home folder doesn't exist."
    
  else
    # The user home dir exists, so far so good

    f_logmessage "ATTENTION, creating folders."

    # Create Required folders
    LCL_ObjectCount="$(f_GetPlistArraySize "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:Path")"

    for (( LCL_i=0; LCL_i<${LCL_ObjectCount}; LCL_i++ ))
    do
      LCL_ReqdObject="$(f_GetPlistProperty "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:Path:${LCL_i}")"

      # Sanitise the Entry
      LCL_ReqdObject=$(echo "/${LCL_ReqdObject}" | sed "s|^/[/]*|/|;s|/$||")

      if test -n "${LCL_ReqdObject}"
      then
        /bin/mkdir -p "${GLB_LoggedInUserHomeDir}${LCL_ReqdObject}"
      fi
    done

    # Update loginwindow.plist file
    f_SetPlistProperty "${GLB_LoggedInUserHomeDir}/Library/Preferences/loginwindow.plist" ":BuildVersionStampAsNumber" "${GLB_BuildVersionStampAsNumber}"
    f_SetPlistProperty "${GLB_LoggedInUserHomeDir}/Library/Preferences/loginwindow.plist" ":BuildVersionStampAsString" "${GLB_BuildVersionStampAsString}"
    f_SetPlistProperty "${GLB_LoggedInUserHomeDir}/Library/Preferences/loginwindow.plist" ":SystemVersionStampAsNumber" "${GLB_SystemVersionStampAsNumber}"
    f_SetPlistProperty "${GLB_LoggedInUserHomeDir}/Library/Preferences/loginwindow.plist" ":SystemVersionStampAsString" "${GLB_SystemVersionStampAsString}"

  fi

fi
  
# Trigger an event
f_TriggerEvent "${LCL_EventHistory}" "${LCL_PolicyName}" "${LCL_OptionalParam}"

# Remove temporary files
rm -fR "${GLB_ThisScriptTempDir}"

# ---
