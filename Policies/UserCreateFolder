#!/bin/bash
#
# Short:    Policy script - Create user folders at User Login
# Author:   Mark J Swift
# Version:  1.0.90
# Modified: 01-Jul-2016
#
# Triggered by the following events:
#   UserLogin (as user)
#
# Called as follows:    
#   UserCreateFolder <ConfigDir> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

sv_CodeVersion="1.0.90"

if [ $# -eq 0 ]
then
  echo "${sv_CodeVersion}"
  exit 0
fi

# ---

# Get the config directory
sv_ConfigDirPath="${1}"
if test -z "${sv_ConfigDirPath}"
then
  # We need something to work with
  exit 0
fi

# Get event History
sv_EventHistory="${2}"

# Get event that triggered this policy
sv_EventName="$(echo ${sv_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${sv_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get optional user
LW_sv_LoggedInUserName="${3}"

# Get optional parameter
sv_OptionalParam="${4}"

# ---

# Load the library, only if it is not already loaded
if test -z "${LW_sv_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Name of this script)
sv_PolicyName="${LW_sv_ThisScriptName}"

# ---

# Execute the Policy

# Take a note of the Policy call
LW_nf_logmessage "NOTE, policy triggered: '${sv_PolicyName}' ${sv_OptionalParam} triggered by event '${sv_EventHistory}' as user '${LW_sv_ThisUserName}' "

if test -z "${LW_sv_LoggedInUserName}"
then
  LW_nf_QuickExit "NOTE, policy aborted: No-one is logged in."
  
else
  if [ ! -e "${LW_sv_LoggedInUserHomeDirPath}" ]
  then
    LW_nf_QuickExit "NOTE, policy aborted: home folder doesn't exist."
    
  else
    # The user home dir exists, so far so good

    LW_nf_logmessage "ATTENTION, creating folders."

    # Create Required folders
    iv_ObjectCount="$(LW_if_GetPlistArraySize "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:Path")"

    for (( iv_LoopCount=0; iv_LoopCount<${iv_ObjectCount}; iv_LoopCount++ ))
    do
      sv_ReqdObjectFilePath="$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:Path:${iv_LoopCount}")"

      # Sanitise the Entry
      sv_ReqdObjectFilePath=$(echo "/${sv_ReqdObjectFilePath}" | sed "s|^/[/]*|/|;s|/$||")

      if test -n "${sv_ReqdObjectFilePath}"
      then
        /bin/mkdir -p "${LW_sv_LoggedInUserHomeDirPath}${sv_ReqdObjectFilePath}"
      fi
    done

    # Update loginwindow.plist file
    LW_nf_SetPlistProperty "${LW_sv_LoggedInUserHomeDirPath}/Library/Preferences/loginwindow.plist" ":BuildVersionStampAsNumber" "${LW_iv_BuildVersionStampAsNumber}"
    LW_nf_SetPlistProperty "${LW_sv_LoggedInUserHomeDirPath}/Library/Preferences/loginwindow.plist" ":BuildVersionStampAsString" "${LW_sv_BuildVersionStampAsString}"
    LW_nf_SetPlistProperty "${LW_sv_LoggedInUserHomeDirPath}/Library/Preferences/loginwindow.plist" ":SystemVersionStampAsNumber" "${LW_iv_SystemVersionStampAsNumber}"
    LW_nf_SetPlistProperty "${LW_sv_LoggedInUserHomeDirPath}/Library/Preferences/loginwindow.plist" ":SystemVersionStampAsString" "${LW_sv_SystemVersionStampAsString}"

  fi

fi
  
# Trigger an event
LW_nf_TriggerEvent "${sv_EventHistory}" "${sv_PolicyName}" "${sv_OptionalParam}"

# Remove temporary files
srm -fR "${LW_sv_ThisScriptTempDirPath}"

# ---
