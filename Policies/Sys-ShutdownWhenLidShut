#!/bin/bash
#
# Short:    Sys Policy script - Will shutdown laptop when the lid is shut
# Author:   Mark J Swift
# Version:  2.0.17
# Modified: 04-Oct-2017
#
# Triggered by the following events:
#   Sys-WillSleep (as root)
#
# Called as follows:    
#   Sys-ShutdownWhenLidShut <ConfigFilePath> <ConfigEntryName> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

sv_CodeVersion="2.0.17"

if [ $# -eq 0 ]
then
  echo "${sv_CodeVersion}"
  exit 0
fi

# ---

# Get the config file path
sv_ConfigFilePath="${1}"
if test -z "${sv_ConfigFilePath}"
then
  # We need something to work with
  exit 0
fi

# Get config entry name. This is the entry in the config that holds the configurable parameters for this policy.
sv_ConfigEntryName="${2}"

# Get event History
sv_EventHistory="${3}"

# Calculate the event that triggered this policy.
sv_EventName="$(echo ${sv_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${sv_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get the name of the logged in user, a null string signifies no-one is logged in
GLB_sv_LoggedInUserName="${4}"

# Get optional parameter
# This is a general variable that is currently used to pass the following info:
#   Application info during a AppWillLaunch, AppDidLaunch or AppDidTerminate event.
#   User info during a Sys-ConsoleUserLoggedIn, Sys-ConsoleUserLoggedOut, Sys-ConsoleUserSwitch, Sys-Login or Sys-Logout event.
sv_OptionalParam="${5}"

# Get info from optional parameter
case ${sv_EventName} in

Sys-ConsoleUserLoggedIn|Sys-ConsoleUserLoggedOut|Sys-ConsoleUserSwitch|Sys-Login|Sys-Logout)
  GLB_sv_LoggedInUserName="${sv_OptionalParam}"
  ;;
  
esac

# ---

# Load the library, only if it is not already loaded
if test -z "${GLB_sv_ProjectSignature}"
then
  . /usr/local/LabWarden/inc/Common.sh
fi

# By the time we get here, quite a few global variables have been set up.
# Look at 'CommonLib' for a complete list.

# ---

# Get policy name (Name of this script)
sv_PolicyName="${GLB_sv_ThisScriptName}"

# ---

# Calculate the pref file paths

# Local prefs are referenced by Policy UUID and are local to the running user. These are deleted when the policy is updated or uninstalled.
sv_ThisUserLocalPrefFilePath="${GLB_sv_ThisUserPrefDirPath}/${sv_ConfigEntryName}.plist"

# Global prefs are referenced by Policy Name and are read/write root but read-only for normal users. These survive policy updates and uninstalls.
sv_ThisPolicyGlobalPrefFilePath="${GLB_sv_ProjectConfigDirPath}/Config/Global/${sv_PolicyName}.plist"

# ---

# Usr-PolicyInstall & Usr-PolicyUninstall events (which are called as a normal user) are ignored by system policies

if [ "${sv_EventName}" = "Usr-PolicyInstall" ] || [ "${sv_EventName}" = "Usr-PolicyUninstall" ]
then
  GLB_nf_logmessage ${GLB_iv_MsgLevelDebug} "Event '${sv_EventHistory}' ignored by policy '${sv_PolicyName}'"
  exit 0
fi

# ---

# Execute the Policy

# Take a note of the Policy call
GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Policy '${sv_PolicyName}' ${sv_OptionalParam} triggered by event '${sv_EventHistory}' as user '${GLB_sv_ThisUserName}'"

# ---

# Exit if we are not root
if [ "${GLB_sv_ThisUserName}" != "root" ]
then
  GLB_nf_QuickExit "Policy aborted - User '${GLB_sv_ThisUserName}' is not supported by policy '${sv_PolicyName}'"
fi


case ${sv_EventName} in
    
Sys-WillSleep)
  iv_ShutdownDelaySecs="$(GLB_sf_GetPlistProperty "${sv_ConfigFilePath}" ":${sv_ConfigEntryName}:Config:ShutdownDelaySecs")"
  if test -z "${iv_ShutdownDelaySecs}"
  then
    iv_ShutdownDelaySecs=10
  fi
  
  # Get the current lid status
  sv_LidClosedStatus="$(ioreg -r -k AppleClamshellState -d 4 | grep AppleClamshellState | tr " " "\n" | tail -n1)"

  if [ "${sv_LidClosedStatus}" = "Yes" ]
  then
    GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Laptop lid has been closed - waiting up to ${iv_ShutdownDelaySecs} seconds shutting down."

    # Allow lid to be closed a short time before shutting down
    iv_DelayCount=0
    while [ ${iv_DelayCount} -lt ${iv_ShutdownDelaySecs} ]
    do
      sv_LidClosedStatus="$(ioreg -r -k AppleClamshellState -d 4 | grep AppleClamshellState | tr " " "\n" | tail -n1)"
      if [ "${sv_LidClosedStatus}" = "No" ]
      then
        break
      fi
  
      # we don't want to hog the CPU - so lets sleep a while
      sleep 1

      iv_DelayCount=$((${iv_DelayCount}+1))
    done
    
    # Check if the lid is still closed
    if [ "${sv_LidClosedStatus}" = "Yes" ]
    then
      # Shutdown if the lid has been closed for a while
      GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Laptop lid has been closed for ${iv_ShutdownDelaySecs} seconds - we need to shutdown."
      GLB_nf_CreateNamedFlag "Shutdown"
    
    else
      GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Policy aborted - laptop lid has been re-opened."
    
   fi

  else
    GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Policy aborted - laptop lid is open."
    
  fi

  ;;

Sys-PolicyInstall|Sys-PolicyUninstall)
  # Do nothing
  ;;
  
*)
  GLB_nf_QuickExit "Policy aborted - Trigger '${sv_EventName}' is not supported by policy '${sv_PolicyName}'"
  ;;

esac

# ---

# Take a note that the Policy is complete
GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Policy done."

# We might never get here, but I don't suppose that matters
#/usr/local/LabWarden/lib/Trigger "${sv_EventHistory}:${sv_PolicyName}" "$(whoami)" "${sv_OptionalParam}"

# Remove temporary files
rm -fPR "${GLB_sv_ThisScriptTempDirPath}"

# ---
