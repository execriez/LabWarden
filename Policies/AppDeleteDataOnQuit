#!/bin/bash
#
# Short:    Policy script - Delete user application data when an App quits
# Author:   Mark J Swift
# Version:  1.0.92
# Modified: 21-Jul-2016
#
# Triggered by the following events:
#   AppDidTerminate (as user)
#
# Called as follows:    
#   AppDeleteDataOnQuit <ConfigDir> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

sv_CodeVersion="1.0.92"

if [ $# -eq 0 ]
then
  echo "${sv_CodeVersion}"
  exit 0
fi

# ---

# Get the config directory
sv_ConfigDirPath="${1}"
if test -z "${sv_ConfigDirPath}"
then
  # We need something to work with
  exit 0
fi

# Get event History
sv_EventHistory="${2}"

# Get event that triggered this policy
sv_EventName="$(echo ${sv_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${sv_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get optional user
LW_sv_LoggedInUserName="${3}"

# Get optional parameter
sv_OptionalParam="${4}"

# ---

# Get ApplicationBundleIdentifier e.g. com.apple.TextEdit
# Note, older applications may return "(null)"
sv_ThisAppBundleIdentifier="$(echo ${sv_OptionalParam} | cut -d":" -f3)"

# Get notification e.g. WillLaunch, DidLaunch or DidTerminate
sv_ThisAppNotificationType="$(echo ${sv_OptionalParam} | cut -d":" -f1)"

# Get Date/Time Epoch of the notification
iv_ThisAppNotificationEpoch="$(echo ${sv_OptionalParam} | cut -d":" -f2)"

# Get ApplicationName e.g. TextEdit
sv_ThisAppName="$(echo ${sv_OptionalParam} | cut -d":" -f4)"

# Get ApplicationPath e.g. /Applications/TextEdit.app
sv_ThisAppFilePath="$(echo ${sv_OptionalParam} | cut -d":" -f5)"

# Get ApplicationProcessIdentifier - i.e. the process ID
sv_ThisAppProcessID="$(echo ${sv_OptionalParam} | cut -d":" -f6)"

# ---

# Load the library, only if it is not already loaded
if test -z "${LW_sv_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Name of this script)
sv_PolicyName="${LW_sv_ThisScriptName}"

# ---

# Execute the Policy

# Take a note of the Policy call
LW_nf_logmessage "NOTE, policy triggered: '${sv_PolicyName}' ${sv_OptionalParam} triggered by event '${sv_EventHistory}' as user '${LW_sv_ThisUserName}' "

case ${sv_EventName} in
    
AppDidTerminate)
  bv_AppDataDeleted="false"
  iv_AppDataCount="$(LW_if_GetPlistArraySize "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:AppData")"
  for (( iv_LoopCount1=0; iv_LoopCount1<${iv_AppDataCount}; iv_LoopCount1++ ))
  do
    # Get app id
    sv_ListedAppBundleIdentifier="$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:AppData:${iv_LoopCount1}:ApplicationBundleIdentifier")"
    if test -n "${sv_ListedAppBundleIdentifier}"
    then
      if [ "${sv_ListedAppBundleIdentifier}" = "${sv_ThisAppBundleIdentifier}" ]
      then
        iv_PathCount="$(LW_if_GetPlistArraySize "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:AppData:${iv_LoopCount1}:Path")"
        for (( iv_LoopCount2=0; iv_LoopCount2<${iv_PathCount}; iv_LoopCount2++ ))
        do
         sv_DelPath="$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:AppData:${iv_LoopCount1}:Path:${iv_LoopCount2}")"

          # Sanitise the file/folder Path
          sv_DelPath=$(echo "/${sv_DelPath}" | sed "s|^/[/]*|/|;s|/$||")

          if test -n "${sv_DelPath}"
          then
            bv_AppDataDeleted="true"
            if test -d "${LW_sv_LoggedInUserHomeDirPath}${sv_DelPath}"
            then
              # Delete folder
              LW_nf_logmessage "NOTE, delete folder '${sv_DelPath}' "
              rm -fR "${LW_sv_LoggedInUserHomeDirPath}${sv_DelPath}"
            else
              if test -e "${LW_sv_LoggedInUserHomeDirPath}${sv_DelPath}"
              then
                # Delete file
                LW_nf_logmessage "NOTE, delete file '${sv_DelPath}' "
                rm -f "${LW_sv_LoggedInUserHomeDirPath}${sv_DelPath}"
              fi
            fi
          fi

        done
      fi
    fi
    
  done
  
  if [ "${bv_AppDataDeleted}" = "false" ]
  then
    LW_nf_QuickExit "NOTE, policy aborted: there is no App Data to delete for the application '${sv_ThisAppBundleIdentifier}'"
    
  else
    LW_nf_logmessage "ATTENTION, '${sv_ThisAppBundleIdentifier}' App Data removed"
    
  fi

  ;;

*)
  LW_nf_QuickExit "NOTE, policy aborted: Trigger '${sv_EventName}' is not supported by policy '${sv_PolicyName}'"
  ;;

esac
  
# Trigger an event
LW_nf_TriggerEvent "${sv_EventHistory}" "${sv_PolicyName}" "${sv_OptionalParam}"

# Remove temporary files
rm -fPR "${LW_sv_ThisScriptTempDirPath}"

# ---
