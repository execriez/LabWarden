#!/bin/bash
#
# Short:    Policy script - Delete user application data when an App quits
# Author:   Mark J Swift
# Version:  1.0.86
# Modified: 09-Jun-2016
#
# Triggered by the following events:
#   AppDidTerminate (as user)
#
# Called as follows:    
#   AppDeleteDataOnQuit <ConfigDir> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

LCL_ScriptVersion="1.0.86"

if [ $# -eq 0 ]
then
  echo "${LCL_ScriptVersion}"
  exit 0
fi

# ---

# Take a note when this script started
LCL_MyStartEpoch=$(date -u "+%s")

# Get the config directory
LCL_ConfigDir="${1}"
if test -z "${LCL_ConfigDir}"
then
  # We need something to work with
  exit 0
fi

# Get event History
LCL_EventHistory="${2}"

# Get event that triggered this policy
LCL_EventName="$(echo ${LCL_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${LCL_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get optional user
GLB_LoggedInUserName="${3}"

# Get optional parameter
LCL_OptionalParam="${4}"

# ---

# Get ApplicationBundleIdentifier e.g. com.apple.TextEdit
# Note, older applications may return "(null)"
GLB_ApplicationBundleIdentifier="$(echo ${LCL_OptionalParam} | cut -d":" -f3)"

# Get notification e.g. WillLaunch, DidLaunch or DidTerminate
GLB_ApplicationNotification="$(echo ${LCL_OptionalParam} | cut -d":" -f1)"

# Get Date/Time Epoch of the notification
GLB_NotificationEpoch="$(echo ${LCL_OptionalParam} | cut -d":" -f2)"

# Get ApplicationName e.g. TextEdit
GLB_ApplicationName="$(echo ${LCL_OptionalParam} | cut -d":" -f4)"

# Get ApplicationPath e.g. /Applications/TextEdit.app
GLB_ApplicationPath="$(echo ${LCL_OptionalParam} | cut -d":" -f5)"

# Get ApplicationProcessIdentifier - i.e. the process ID
GLB_ApplicationProcessIdentifier="$(echo ${LCL_OptionalParam} | cut -d":" -f6)"

# ---

# Load the library, only if it is not already loaded
if test -z "${GLB_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Filename of this script)
LCL_PolicyName="${GLB_ThisScriptName}"

# ---

# Execute the Policy

# Take a note of the Policy call
f_logmessage "NOTE, policy triggered: '${LCL_PolicyName}' ${LCL_OptionalParam} triggered by event '${LCL_EventHistory}' as user '${GLB_ThisUserName}' "

case ${LCL_EventName} in
    
AppDidTerminate)
  LCL_AppDataDeleted="false"
  LCL_AppDataCount="$(f_GetPlistArraySize "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:AppData")"
  for (( LCL_i=0; LCL_i<${LCL_AppDataCount}; LCL_i++ ))
  do
    # Get app id
    LCL_ApplicationBundleIdentifier="$(f_GetPlistProperty "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:AppData:${LCL_i}:ApplicationBundleIdentifier")"
    if test -n "${LCL_ApplicationBundleIdentifier}"
    then
      if [ "${LCL_ApplicationBundleIdentifier}" = "${GLB_ApplicationBundleIdentifier}" ]
      then
        LCL_PathCount="$(f_GetPlistArraySize "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:AppData:${LCL_i}:Path")"
        for (( LCL_j=0; LCL_j<${LCL_PathCount}; LCL_j++ ))
        do
         LCL_Path="$(f_GetPlistProperty "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:AppData:${LCL_i}:Path:${LCL_j}")"

          # Sanitise the file/folder Path
          LCL_Path=$(echo "/${LCL_Path}" | sed "s|^/[/]*|/|;s|/$||")

          if test -n "${LCL_Path}"
          then
            LCL_AppDataDeleted="true"
            if test -d "${GLB_LoggedInUserHomeDir}${LCL_Path}"
            then
              # Delete folder
              f_logmessage "NOTE, delete folder '${LCL_Path}' "
              rm -fR "${GLB_LoggedInUserHomeDir}${LCL_Path}"
            else
              if test -e "${GLB_LoggedInUserHomeDir}${LCL_Path}"
              then
                # Delete file
                f_logmessage "NOTE, delete file '${LCL_Path}' "
                rm -f "${GLB_LoggedInUserHomeDir}${LCL_Path}"
              fi
            fi
          fi

        done
      fi
    fi
    
  done
  
  if [ "${LCL_AppDataDeleted}" = "false" ]
  then
    f_QuickExit "NOTE, policy aborted: there is no App Data to delete for the application '${GLB_ApplicationBundleIdentifier}'"
    
  else
    f_logmessage "ATTENTION, '${GLB_ApplicationBundleIdentifier}' App Data removed"
    
  fi

  ;;

*)
  f_QuickExit "NOTE, policy aborted: Trigger '${LCL_EventName}' is not supported by policy '${LCL_PolicyName}'"
  ;;

esac
  
# Trigger an event
f_TriggerEvent "${LCL_EventHistory}" "${LCL_PolicyName}" "${LCL_OptionalParam}"

# Remove temporary files
srm -fR "${GLB_ThisScriptTempDir}"

# ---
