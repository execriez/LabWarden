#!/bin/bash
#
# Short:    Policy script - Turn wireless on or off
# Author:   Mark J Swift
# Version:  1.0.92
# Modified: 21-Jul-2016
#
# Triggered by the following events:
#   Boot (as root)
#
# Called as follows:    
#   SystemWirelessSetState <ConfigDir> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

sv_CodeVersion="1.0.92"

if [ $# -eq 0 ]
then
  echo "${sv_CodeVersion}"
  exit 0
fi

# ---

# Get the config directory
sv_ConfigDirPath="${1}"
if test -z "${sv_ConfigDirPath}"
then
  # We need something to work with
  exit 0
fi

# Get event History
sv_EventHistory="${2}"

# Get event that triggered this policy
sv_EventName="$(echo ${sv_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${sv_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get optional user
LW_sv_LoggedInUserName="${3}"

# Get optional parameter
sv_OptionalParam="${4}"

# ---

# Load the library, only if it is not already loaded
if test -z "${LW_sv_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Name of this script)
sv_PolicyName="${LW_sv_ThisScriptName}"

# ---

# Execute the Policy

# Take a note of the Policy call
LW_nf_logmessage "NOTE, policy triggered: '${sv_PolicyName}' ${sv_OptionalParam} triggered by event '${sv_EventHistory}' as user '${LW_sv_ThisUserName}' "

if [ "${LW_sv_ThisUserName}" != "root" ]
then
  LW_nf_QuickExit "NOTE, policy aborted: User '${LW_sv_ThisUserName}' is not supported by policy '${sv_PolicyName}'"
  
else
  bv_PolicyExecuted="false"

  # Get the the hardware port for wireless (eg en1)
  sv_WirelessHardwarePort="$(networksetup -listallhardwareports | tr "\n" ":" | sed "s|^[:]*||;s|::|;|g" | tr ";" "\n" | grep "Wi-Fi" | sed "s|\(.*Device:[ ]*\)\([^:]*\)\(.*\)|\2|")"
  
  if test -n "${sv_WirelessHardwarePort}"
  then
    sv_WirelessState="$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:WirelessState")"

    if test -n "${sv_WirelessState}"
    then
      bv_PolicyExecuted="true"

      # Turn Wi-Fi port on or off
      networksetup -setairportpower ${sv_WirelessHardwarePort} ${sv_WirelessState}

      bv_RequireAdminIBSS="$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:RequireAdminIBSS")"
      if [ "${bv_RequireAdminIBSS}" = "true" ]
      then
        sv_YesNoAdminIBSS="YES"
      else
        sv_YesNoAdminIBSS="NO"
      fi
      
      bv_RequireAdminNetworkChange="$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:RequireAdminNetworkChange")"
      if [ "${bv_RequireAdminNetworkChange}" = "true" ]
      then
        sv_YesNoAdminNetworkChange="YES"
      else
        sv_YesNoAdminNetworkChange="NO"
      fi
      
      bv_RequireAdminPowerToggle="$(LW_sf_GetPlistProperty "${sv_ConfigDirPath}/LabWarden.plist" ":${sv_PolicyName}:Config:RequireAdminPowerToggle")"
      if [ "${bv_RequireAdminPowerToggle}" = "true" ]
      then
        sv_YesNoAdminPowerToggle="YES"
      else
        sv_YesNoAdminPowerToggle="NO"
      fi
      
      # Set the Wi-Fi options
      /usr/libexec/airportd prefs RequireAdminIBSS="${sv_YesNoAdminIBSS}" RequireAdminNetworkChange="${sv_YesNoAdminNetworkChange}" RequireAdminPowerToggle="${sv_YesNoAdminPowerToggle}"
    fi

    if [ "${bv_PolicyExecuted}" = "true" ]
    then
      LW_nf_logmessage "ATTENTION, wireless state has been set."
  
    else
      LW_nf_QuickExit "NOTE, policy aborted: "
    
    fi
  
  fi

fi
  
# Trigger an event
LW_nf_TriggerEvent "${sv_EventHistory}" "${sv_PolicyName}" "${sv_OptionalParam}"

# Remove temporary files
rm -fPR "${LW_sv_ThisScriptTempDirPath}"

# ---
