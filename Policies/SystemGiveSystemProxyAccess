#!/bin/bash
#
# Short:    Policy script - Give certain processes access through proxy using workstation credentials
# Author:   Mark J Swift
# Version:  1.0.82
# Modified: 27-May-2016
#
# Triggered by the following events:
#   Boot (as root)
#
# Called as follows:    
#   SystemGiveSystemProxyAccess <ConfigDir> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

LCL_ScriptVersion="1.0.82"

if [ $# -eq 0 ]
then
  echo "${LCL_ScriptVersion}"
  exit 0
fi

# ---

# Take a note when this script started
LCL_MyStartEpoch=$(date -u "+%s")

# Get the config directory
LCL_ConfigDir="${1}"
if test -z "${LCL_ConfigDir}"
then
  # We need something to work with
  exit 0
fi

# Get event History
LCL_EventHistory="${2}"

# Get event that triggered this policy
LCL_EventName="$(echo ${LCL_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${LCL_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get optional user
GLB_LoggedInUserName="${3}"

# Get optional parameter
LCL_OptionalParam="${4}"

# ---

# Load the library, only if it is not already loaded
if test -z "${GLB_LabWardenVersion}"
then
  . /usr/local/LabWarden/lib/CommonLib
fi

# ---

# Get policy name (Filename of this script)
LCL_PolicyName="${GLB_ThisScriptName}"

# ---

f_SystemProxyAccess() # protocol (eg 'http' 'htps' 'ftp') server (eg bisproxy1.lits.blackpool.ac.uk) port (eg 8080) appPath (eg /usr/sbin/ocspd)
{
  local LCL_Protocol
  local LCL_Server
  local LCL_Port
  local LCL_AppPaths
  local LCL_AppOpt

  LCL_Protocol="${1}"
  LCL_Server="${2}"
  LCL_Port="${3}"
  LCL_AppPaths="${4}"
  
  f_logmessage "NOTE, allowing ${LCL_AppPaths} through ${LCL_Protocol}://${LCL_Server}:${LCL_Port}."

  LCL_AppOpt="$(echo ${LCL_AppPaths} | sed "s|,| -T |g")"
  
  LCL_Label="${LCL_Protocol}_${LCL_Server}_${LCL_Port}"

  # Just a little trick to expand the LCL_AppOpt variable, but keep the password quoted (eval wouldnt do)
  /usr/bin/su root <<HEREDOC

  security delete-internet-password -l "${LCL_Label}" /Library/Keychains/System.keychain
  security add-internet-password -U -a "${GLB_ADTrustAccount}" -w "${GLB_ADTrustPassword}" -l "${LCL_Label}" -P "${LCL_Port}" -r "${LCL_Protocol}" -s "${LCL_Server}" -T ${LCL_AppOpt} /Library/Keychains/System.keychain

HEREDOC
}

# ---

# Execute the Policy

# Take a note of the Policy call
f_logmessage "NOTE, policy triggered: '${LCL_PolicyName}' ${LCL_OptionalParam} triggered by event '${LCL_EventHistory}' as user '${GLB_ThisUserName}' "

if [ "${GLB_ThisUserName}" != "root" ]
then
  f_QuickExit "NOTE, policy aborted: User '${GLB_ThisUserName}' is not supported by policy '${LCL_PolicyName}'"
  
else    
  LCL_PolicyExecuted="false"

  # Give certain processes access to through proxy using workstation credentials
  LCL_ProxyCount="$(f_GetPlistArraySize "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:Proxy")"
  for (( LCL_i=0; LCL_i<${LCL_ProxyCount}; LCL_i++ ))
  do
    LCL_ProxyProtocol="$(f_GetPlistProperty "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:Proxy:${LCL_i}:ProxyProtocol")"
    if test -n "${LCL_ProxyProtocol}"
    then
      LCL_ProxyAddress="$(f_GetPlistProperty "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:Proxy:${LCL_i}:ProxyAddress")"
      if test -n "${LCL_ProxyAddress}"
      then
        LCL_ProxyPort="$(f_GetPlistProperty "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:Proxy:${LCL_i}:ProxyPort")"
        if test -n "${LCL_ProxyPort}"
        then
          LCL_ProcessList=""
      
          LCL_ProcessCount="$(f_GetPlistArraySize "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:Proxy:${LCL_i}:Process")"
          for (( LCL_j=0; LCL_j<${LCL_ProcessCount}; LCL_j++ ))
          do
            LCL_Process="$(f_GetPlistProperty "${LCL_ConfigDir}/LabWarden.plist" ":${LCL_PolicyName}:Config:Proxy:${LCL_i}:Process:${LCL_j}")"
            if test -n "${LCL_Process}"
            then
              if test -n "${LCL_ProcessList}"
              then
                LCL_ProcessList="${LCL_ProcessList},"
              fi
              LCL_ProcessList="${LCL_ProcessList}${LCL_Process}"
            fi
          done

          if test -n "${LCL_ProcessList}"
          then
            f_SystemProxyAccess "${LCL_ProxyProtocol}" "${LCL_ProxyAddress}" "${LCL_ProxyPort}" "${LCL_ProcessList}"
            LCL_PolicyExecuted="true"
          fi
      
        fi
      fi
    fi
  done

  if [ "${LCL_PolicyExecuted}" = "true" ]
  then
    f_logmessage "ATTENTION, system proxy access configured."
  
  else
    f_QuickExit "NOTE, policy aborted: "
    
  fi

fi
  
# Trigger an event
f_TriggerEvent "${LCL_EventHistory}" "${LCL_PolicyName}" "${LCL_OptionalParam}"

# Remove temporary files
rm -fR "${GLB_ThisScriptTempDir}"

# ---
