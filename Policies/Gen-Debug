#!/bin/bash
#
# Short:    Gen Policy script - Writes debug info to the policy prefs
# Author:   Mark J Swift
# Version:  2.0.10
# Modified: 12-Jun-2017
#
# Triggered by the following events:
#   All events (as user or root)
#
# Called as follows:    
#   Gen-Debug <ConfigFilePath> <ConfigEntryName> <EventHistory> <LoggedInUser> <OptionalParam>

# ---

sv_CodeVersion="2.0.10"

if [ $# -eq 0 ]
then
  echo "${sv_CodeVersion}"
  exit 0
fi

# ---

# Get the config file path
sv_ConfigFilePath="${1}"
if test -z "${sv_ConfigFilePath}"
then
  # We need something to work with
  exit 0
fi

# Get config entry name. This is the entry in the config that holds the configurable parameters for this policy.
sv_ConfigEntryName="${2}"

# Get event History
sv_EventHistory="${3}"

# Calculate the event that triggered this policy.
sv_EventName="$(echo ${sv_EventHistory} | tr ":" "\n" | tail -n 1)"
if test -z "${sv_EventName}"
then
  # We need something to work with
  exit 0
fi

# Get the name of the logged in user, a null string signifies no-one is logged in
GLB_sv_LoggedInUserName="${4}"

# Get optional parameter
# This is a general variable that is currently used to pass the following info:
#   Application info during a AppWillLaunch, AppDidLaunch or AppDidTerminate event.
#   User info during a Sys-ConsoleUserLoggedIn, Sys-ConsoleUserLoggedOut, Sys-ConsoleUserSwitch, Sys-Login or Sys-Logout event.
sv_OptionalParam="${5}"

# Get info from optional parameter
case ${sv_EventName} in

App-WillLaunch|App-DidLaunch|App-DidTerminate)

  # Get ApplicationBundleIdentifier e.g. com.apple.TextEdit
  # Note, older applications may return "(null)"
  sv_ThisAppBundleIdentifier="$(echo ${sv_OptionalParam} | cut -d":" -f3)"

  # Get notification e.g. WillLaunch, DidLaunch or DidTerminate
  sv_ThisAppNotificationType="$(echo ${sv_OptionalParam} | cut -d":" -f1)"

  # Get Date/Time Epoch of the notification
  iv_ThisAppNotificationEpoch="$(echo ${sv_OptionalParam} | cut -d":" -f2)"

  # Get ApplicationName e.g. TextEdit
  sv_ThisAppName="$(echo ${sv_OptionalParam} | cut -d":" -f4)"

  # Get ApplicationPath e.g. /Applications/TextEdit.app
  sv_ThisAppFilePath="$(echo ${sv_OptionalParam} | cut -d":" -f5)"

  # Get ApplicationProcessIdentifier - i.e. the process ID
  sv_ThisAppProcessID="$(echo ${sv_OptionalParam} | cut -d":" -f6)"
  ;;
  
  # Note, we should quickly quit if are running an App that we are not interested in

  # ------------------
  # BEGIN YOUR CODE HERE

  # We could test for a specific App, but in this example we are interested in all Apps
  #
  # if [ "${sv_ThisAppBundleIdentifier}" != "org.mozilla.firefox" ]
  # then
  #   exit 0
  # fi

  # END YOUR CODE HERE
  # ------------------

Sys-ConsoleUserLoggedIn|Sys-ConsoleUserLoggedOut|Sys-ConsoleUserSwitch|Sys-Login|Sys-Logout)
  GLB_sv_LoggedInUserName="${sv_OptionalParam}"
  ;;
  
esac

# ---

# Load the library, only if it is not already loaded
if test -z "${GLB_sv_ProjectSignature}"
then
  . /usr/local/LabWarden/inc/Common.sh
fi

# By the time we get here, quite a few global variables have been set up.
# Look at 'CommonLib' for a complete list.

# ---

# Get policy name (Name of this script)
sv_PolicyName="${GLB_sv_ThisScriptName}"

# ---

# Calculate the pref file paths

# Local prefs are referenced by Policy UUID and are local to the running user. These are deleted when the policy is updated or uninstalled.
sv_ThisUserLocalPrefFilePath="${GLB_sv_ThisUserPrefDirPath}/${sv_ConfigEntryName}.plist"

# Global prefs are referenced by Policy Name and are read/write root but read-only for normal users. These survive policy updates and uninstalls.
sv_ThisPolicyGlobalPrefFilePath="${GLB_sv_ProjectConfigDirPath}/Config/Global/${sv_PolicyName}.plist"

# ---

# Execute the Policy

# Take a note of the Policy call
GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Policy '${sv_PolicyName}' ${sv_OptionalParam} triggered by event '${sv_EventHistory}' as user '${GLB_sv_ThisUserName}'"

# ---

case ${sv_EventName} in
    
*)
  GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Writing the CommonLib globals to the policies local vars."
  
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_iv_ThisScriptStartEpoch" "${GLB_iv_ThisScriptStartEpoch}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ProjectVersion" "${GLB_sv_ProjectVersion}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ProjectSignature" "${GLB_sv_ProjectSignature}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_iv_MaxLogSizeBytes" "${GLB_iv_MaxLogSizeBytes}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_bv_LogIsActiveDefault" "${GLB_bv_LogIsActiveDefault}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_bv_LogIsActive" "${GLB_bv_LogIsActive}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_BinDirPath" "${GLB_sv_BinDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ProjectConfigDirPath" "${GLB_sv_ProjectConfigDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisScriptFilePath" "${GLB_sv_ThisScriptFilePath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisScriptDirPath" "${GLB_sv_ThisScriptDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisScriptFileName" "${GLB_sv_ThisScriptFileName}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisScriptName" "${GLB_sv_ThisScriptName}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_iv_ThisScriptPID" "${GLB_iv_ThisScriptPID}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisScriptTempDirPath" "${GLB_sv_ThisScriptTempDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisUserTempDirPath" "${GLB_sv_ThisUserTempDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisUserLogDirPath" "${GLB_sv_ThisUserLogDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisUserPrefDirPath" "${GLB_sv_ThisUserPrefDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ThisUserName" "${GLB_sv_ThisUserName}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_iv_ThisUserID" "${GLB_iv_ThisUserID}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_iv_LoggedInUserID" "${GLB_iv_LoggedInUserID}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_bv_LoggedInUserIsAdmin" "${GLB_bv_LoggedInUserIsAdmin}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_bv_LoggedInUserIsLocal" "${GLB_bv_LoggedInUserIsLocal}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_bv_LoggedInUserIsMobile" "${GLB_bv_LoggedInUserIsMobile}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_LoggedInUserHomeDirPath" "${GLB_sv_LoggedInUserHomeDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_LoggedInUserLocalHomeDirPath" "${GLB_sv_LoggedInUserLocalHomeDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_LoggedInUserHomeNetworkDirPath" "${GLB_sv_LoggedInUserHomeNetworkDirPath}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_LoggedInUserHomeNetworkURI" "${GLB_sv_LoggedInUserHomeNetworkURI}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_bv_LoggedInUserHomeIsLocal" "${GLB_bv_LoggedInUserHomeIsLocal}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_iv_BuildVersionStampAsNumber" "${GLB_iv_BuildVersionStampAsNumber}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_BuildVersionStampAsString" "${GLB_sv_BuildVersionStampAsString}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_iv_SystemVersionStampAsNumber" "${GLB_iv_SystemVersionStampAsNumber}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_SystemVersionStampAsString" "${GLB_sv_SystemVersionStampAsString}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_IPv4PrimaryService" "${GLB_sv_IPv4PrimaryService}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_NetworkServiceDHCPOption15" "${GLB_sv_NetworkServiceDHCPOption15}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_NetworkServiceInterfaceName" "${GLB_sv_NetworkServiceInterfaceName}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_NetworkServiceInterfaceDevice" "${GLB_sv_NetworkServiceInterfaceDevice}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_NetworkServiceInterfaceHardware" "${GLB_sv_NetworkServiceInterfaceHardware}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ADTrustAccount" "${GLB_sv_ADTrustAccount}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ADComputerName" "${GLB_sv_ADComputerName}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ADDomainNameFlat" "${GLB_sv_ADDomainNameFlat}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ADDomainNameDNS" "${GLB_sv_ADDomainNameDNS}"
  GLB_nf_SetPlistProperty "${sv_ThisUserLocalPrefFilePath}" ":${sv_ConfigEntryName}:LocalPrefs:${sv_EventName}:GLB_sv_ADTrustPassword" "$(echo "${GLB_sv_ADTrustPassword}" | sed "s|.|\*|g")"
  ;;

esac
  
# ---

# Take a note that the Policy is complete
GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Policy done."

# Trigger an event
#GLB_nf_TriggerEvent "${sv_EventHistory}" "${sv_PolicyName}" "${sv_OptionalParam}"

# Remove temporary files
rm -fPR "${GLB_sv_ThisScriptTempDirPath}"

# ---
