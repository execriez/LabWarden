#!/bin/bash
#
# Short:    Usr Policy Script - Example User Policy script (A blank canvas)
# Author:   Mark J Swift
# Version:  3.3.0
# Modified: 22-May-2022
#
# Triggered by the following events:
#   Usr-ConsoleUserLoggedIn  (as user)
#   Usr-ConsoleUserSwitch    (as user)
#   Usr-AtDesktop            (as user)
#   Usr-AppWillLaunch        (as user)
#   Usr-AppDidLaunch         (as user)
#   Usr-AppDidTerminate      (as user)
#   Usr-Poll                 (as user)
#   Usr-Idle                 (as user)
#   Usr-VolDidMount          (as user)
#   Usr-VolWillUnmount       (as user)
#   Usr-VolDidUnmount        (as user)
#
#   ... see associated config 'Sys-ExamplePolicy.mobileconfig'
#
# Called as follows:    
#   Usr-ExamplePolicy <PolicyName> <EventName> <OptionalParam> <ConsoleUserInfo> <ConfigUUID> <ConfigFilePath> <LocalPrefsFilePath> <GlobalPrefsFilePath> <SysDefaultsConfigFilePath> <LogInfo>

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# Define the policy code version
GLB_SV_CODEVERSION="3.3.0"

# Define a list of policies that replace this one
GLB_SV_DEPRECATEDBYPOLICYLIST=""

# ---

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyHeader.sh

# By the time we get here, quite a few global variables have been set up.

# ---

# ------------------
# BEGIN YOUR CODE HERE
  
# Read some values from the policy config
bv_ExampleBool="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExampleBool")"
iv_ExampleNum="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExampleNum")"
sv_ExampleString="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExampleString")"
sv_ExampleArray0="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExampleArray:0")"
sv_ExampleArray1="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExampleArray:1")"
sv_ExampleArray2="$(GLB_SF_GETPLISTPROPERTY "${GLB_SV_CONFIGFILEPATH}" ":${GLB_SV_CONFIGUUID}:Config:ExampleArray:2")"

# We could do something with the values now

# Here we are just outputting the values to the log if the log level is Debug
GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "ExampleBool:${bv_ExampleBool}"
GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "ExampleNum:${iv_ExampleNum}"
GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "ExampleString:${sv_ExampleString}"
GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "ExampleArray[0]:${sv_ExampleArray0}"
GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "ExampleArray[1]:${sv_ExampleArray1}"
GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELDEBUG} "ExampleArray[2]:${sv_ExampleArray2}"

# Lets handle the events

# In this example we are just using the 'say' command to speak what is happening

case ${GLB_SV_EVENTNAME} in

Usr-ConsoleUserLoggedIn)
  # (as user) - Do this when a user logs in
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  sleep 2;say "${GLB_SV_EVENTNAME} ${GLB_SV_CONSOLEUSERNAME}" &
  ;;

Usr-ConsoleUserSwitch)
  # (as user) - Do this when a user switches to another user
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  say "${GLB_SV_EVENTNAME} ${GLB_SV_CONSOLEUSERNAME}" &
  ;;

Usr-AtDesktop)
  # (as user) - Do this when a user first gets to a desktop
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  say "${GLB_SV_EVENTNAME} ${GLB_SV_CONSOLEUSERNAME}" &
  ;;

Usr-AppWillLaunch)
  # (as user) - Do this when an Application quits
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  say "Application '${GLB_SV_LAUNCHEDAPPNAME}' is loading" &
  ;;

Usr-AppDidLaunch)
  # (as user) - Do this when an Application quits
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  say "Application '${GLB_SV_LAUNCHEDAPPNAME}' fully loaded" &
  ;;

Usr-AppDidTerminate)
  # (as user) - Do this when an Application quits
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  say "Application '${GLB_SV_LAUNCHEDAPPNAME}' just quit" &
  ;;

Usr-Poll)
  # (as user) - Do this regularly in the background when a user is logged in
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  say "${GLB_SV_EVENTNAME} ${GLB_SV_CONSOLEUSERNAME}" &
  ;;

Usr-Idle)
  # (as user) - Do this regularly in the background when a user is idle
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  sleep 2;say "${GLB_SV_EVENTNAME} ${GLB_SV_CONSOLEUSERNAME}" &
  ;;

Usr-VolDidMount)
  # (as user) - Do this when a volume is mounted
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  sleep 2;say "${GLB_SV_EVENTNAME} ${GLB_SV_OPTIONALPARAM}" &
  ;;

Usr-VolWillUnmount)
  # (as user) - Do this when a volume is about to unmount
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  sleep 2;say "${GLB_SV_EVENTNAME} ${GLB_SV_OPTIONALPARAM}" &
  ;;

Usr-VolDidUnmount)
  # (as user) - Do this when a volume has just unmounted
  GLB_NF_LOGMESSAGE ${GLB_IC_MSGLEVELNOTICE} "Policy is speaking."
  sleep 2;say "${GLB_SV_EVENTNAME} ${GLB_SV_OPTIONALPARAM}" &
  ;;

Usr-PolicyInstall|Usr-PolicyUninstall)
  # Do nothing
  ;;
  
*)
  GLB_NF_QUICKEXIT "Policy aborted - Trigger '${GLB_SV_EVENTNAME}' is not supported by policy '${GLB_SV_POLICYNAME}'"
  ;;

esac

# Write a value to the local policy vars (root user and normal users have different local policies)
GLB_NF_SETPLISTPROPERTY "${GLB_SV_LOCALPREFSFILEPATH}" ":${GLB_SV_CONFIGUUID}:LocalPrefs:LastRunEpoch" "${GLB_IV_THISSCRIPTSTARTEPOCH}"

# END YOUR CODE HERE
# ------------------
    
# ---

# Tidy up

. "${GLB_SV_PROJECTDIRPATH}"/inc-sh/PolicyFooter.sh

# ---
