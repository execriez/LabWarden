#!/bin/bash
#
# Short:    Do something when the network goes down
# Author:   Mark J Swift
# Version:  3.3.2
# Modified: 28-May-2022
#
# Called by NetworkStatusWarden as root like this:
#   NetworkStatusWarden-NetworkDown "ServiceUUID" "DeviceName"
# i.e.
#   NetworkStatusWarden-NetworkDown "9804EAB2-718C-42A7-891D-79B73F91CA4B" "en0"

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# ---

# Get user name
GLB_SV_RUNUSERNAME="$(whoami)"

if [ "${GLB_SV_RUNUSERNAME}" != "root" ]
then
  exit 0
fi

# ---

# Get network service UUID
GLB_SV_MOUNTEDNETWORKSERVICEUUID="${1}"

# Get interface name
GLB_SV_MOUNTEDNETWORKDEVICENAME="${2}"

# Trigger the Sys-NetworkDown policy
"${GLB_SV_PROJECTDIRPATH}"/bin/Trigger "Sys-NetworkDown" "${GLB_SV_MOUNTEDNETWORKSERVICEUUID}:${GLB_SV_MOUNTEDNETWORKDEVICENAME}" &

# ---

# We dont want to quit until all sub tasks are finished
while [ -n "$(jobs -r)" ]
do
  # We don't want to hog the CPU - so lets sleep a while
  sleep 1
done
