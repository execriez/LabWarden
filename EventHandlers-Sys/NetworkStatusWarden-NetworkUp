#!/bin/bash
#
# Short:    Do something when the network comes up
# Author:   Mark J Swift
# Version:  3.2.5
# Modified: 30-Dec-2020
#
# Called by NetworkStatusWarden as root like this:
#   NetworkStatusWarden-NetworkUp "ServiceUUID" "DeviceName"
# i.e.
#   NetworkStatusWarden-NetworkUp "9804EAB2-718C-42A7-891D-79B73F91CA4B" "en0"

# ---
  
# Assume that all code is run from a subdirectory of the main project directory
GLB_SV_PROJECTDIRPATH="$(dirname $(dirname ${0}))"

# ---

# Get user name
GLB_SV_RUNUSERNAME="$(whoami)"

if [ "${GLB_SV_RUNUSERNAME}" != "root" ]
then
  exit 0
fi

# ---

# Get network service UUID
GLB_SV_MOUNTEDNETWORKSERVICEUUID="${1}"

# Get interface name
GLB_SV_MOUNTEDNETWORKDEVICENAME="${2}"

# --- Begin Optional Flapping Fix -----

# Delay before commiting
sv_MaxSecs=1

sv_LockName="NetworkUp"

sv_FlapID=$(dirname "${0}" | tr "/" "-")
sv_LockDirPath="/tmp/${sv_FlapID}"

mkdir -p "${sv_LockDirPath}"
chown root:wheel "${sv_LockDirPath}"
chmod 750 "${sv_LockDirPath}"

# Get Process ID of this script
iv_ThisScriptPID=$$

echo "${iv_ThisScriptPID}" > "${sv_LockDirPath}/${sv_LockName}"
while [ 1 = 1 ]
do
  if [ ! -e "${sv_LockDirPath}/NetworkDown" ]
  then
    iv_LockEpoch=$(stat -f "%m" "${sv_LockDirPath}/${sv_LockName}")
    if [ $(($(date -u "+%s")-${iv_LockEpoch})) -ge ${sv_MaxSecs} ]
    then
      break
    fi
  fi
  sleep 1
done

sv_ActiveLockPID="$(cat "${sv_LockDirPath}/${sv_LockName}" | head -n1)"
if [ "${sv_ActiveLockPID}" != "${iv_ThisScriptPID}" ]
then
  exit 0
fi

rm -f "${sv_LockDirPath}/${sv_LockName}"

# --- End Optional Flapping Fix -----

# Trigger the Sys-NetworkUp policy
"${GLB_SV_PROJECTDIRPATH}"/bin/Trigger "Sys-NetworkUp" "${GLB_SV_MOUNTEDNETWORKSERVICEUUID}:${GLB_SV_MOUNTEDNETWORKDEVICENAME}" &

# ---

# We dont want to quit until all sub tasks are finished
while [ -n "$(jobs -r)" ]
do
  # We don't want to hog the CPU - so lets sleep a while
  sleep 1
done
